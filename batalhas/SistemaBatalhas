using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;
using System.Security.Cryptography.X509Certificates;
using System.Security.Cryptography;

public class SistemaBatalhas : MonoBehaviour
{
    public BattleStates currentState;
    public TipoBatalha tipoDessaBatalha;

    float ataque = 20;

    // STATUS
    // -------------------------------

    public float popularidadePlayer, danoPlayer, autoridadePlayer, apoioMidiaPlayer, retoricaPlayer;
    public int levelPlayer;
    public int confiancaPlayer;

    public float autoridadeAtaque;

    public int levelInimigo;
    public float popularidadeInimigo, danoInimigo, autoridadeInimigo, apoioMidiaInimigo, retoricaInimigo;
    public int confiancaInimigo;
    // -------------------------------

    bool playerAtacou, inimigoAtacou;
    public Text popInimigo_txtUI, pop_txtUI;
    public Slider barraPopInimigo, barraPop;
    public bool trocouPersonagem, trocouInimigo;

    public int quantosInimigos;

    public Button botao1, botao2;

    public float somaPopPartido;

    public GameObject painelPartido, fecharPainel, canvasBatalha, canvasGame;


    public float popLula, popCiro, popBolso, popDilma, popSuplicy, popEneas;
    public Button LulaPartido, CiroPartido, BolsoPartido, DilmaPartido, SuplicyPartido, EneasPartido;

    public GameObject MovimentosLula, MovimentosCiro, MovimentosBolso, MovimentosDilma, MovimentosSuplicy, MovimentosEneas, MovimentosPlayer;

    public Text dialogo, infoAtaque, qte_Ataque;

    // QUANTIDADES DE CADA ATAQUE
    public int qtePopulismo, qteHabeasCorpus, qteMilitancia, qteElogioJornal, qteDenunciaSupremo, qteForoPrivilegiado;
    public int qteVazarLigacoes, qteAdHominem, qteApoioCentrao;

    //  PARA CADA PERSONAGEM
    public int qtePopulismoLula, qtePopulismoCiro, qtePopulismoBolso, qtePopulismoDilma, qtePopulismoSuplicy, qtePopulismoEneas;
    public int qteHabeasLula, qteHabeasCiro, qteHabeasBolso, qteHabeasDilma, qteHabeasSuplicy, qteHabeasEneas;
    public int qteMilitanciaLula, qteMilitanciaCiro, qteMilitanciaBolso, qteMilitanciaDilma, qteMilitanciaSuplicy, qteMilitanciaEneas;
    public int qteElogioLula, qteElogioCiro, qteElogioBolso, qteElogioDilma, qteElogioSuplicy, qteElogioEneas;
    public int qteDenunciaSupremoLula, qteDenunciaSupremoCiro, qteDenunciaSupremoBolso, qteDenunciaSupremoDilma, qteDenunciaSupremoSuplicy, qteDenunciaSupremoEneas;
    public int qteForoLula, qteForoCiro, qteForoBolso, qteForoDilma, qteForoSuplicy, qteForoEneas;
    public int qteVazarLula, qteVazarCiro, qteVazarBolso, qteVazarDilma, qteVazarSuplicy, qteVazarEneas;
    public int qteAdHominemLula, qteAdHominemCiro, qteAdHominemBolso, qteAdHominemDilma, qteAdHominemSuplicy, qteAdHominemEneas;
    public int qteApoioCentraoLula, qteApoioCentraoCiro, qteApoioCentraoBolso, qteApoioCentraoDilma, qteApoioCentraoSuplicy, qteApoioCentraoEneas;




    // Botoes de ataque (desabilitam quando não tem mais a quantidade)

    public Button ataquePopulismo, ataqueHabeasCorpus, ataqueMilitancia, ataqueElogioJornal, ataqueDenunciaSupremo;
    public Button ataqueForoPrivilegiado, ataqueVazarLigacoes, ataqueAdHominem, ataqueApoioCentrao;
    public bool proximaMsg;

    // ------ //
    public int chanceMitarLacrar, calculoConfianca, confianca;
    public float mitouLacrou;
    public bool direita, esquerda;

    // Bool para verificar se foi dado algum ataque de defesa 100%
    public bool playerProtegido, inimigoProtegido;

    public enum BattleStates
    {
        START,
        ESCOLHAJOGADOR,
        ESCOLHAINIMIGO,
        PERDEU,
        GANHOU
    }

    public enum TipoBatalha
    {
        ELEICAO,
        IMPEACHMENT,
        MILITANTES,
        LAVAJATO
    }



    public void Awake()
    {


        if (canvasBatalha.GetComponent<Canvas>().enabled == true)
        {
            SomaPartido();
        }

        HabilitaBotoes();
        PopPersonagens();
        pop_txtUI.text = Mathf.Round(popularidadePlayer).ToString();
        barraPop.value = popularidadePlayer;
        barraPop.maxValue = 100;


        StatusDeBatalha();
        StatusDeBatalhaInimigos();
        QuantidadeAtaques();
        ResetaQuantidadeAtaques();
        DireitaEsquerda();
    }



    public void Start()
    {
        HabilitaBotoes();
        QuantidadeAtaques();
        quantosInimigos = PlayerPrefs.GetInt("QuantosInimigos");
        PlayerPrefs.SetFloat("QuantosInimigos", quantosInimigos);

        popularidadeInimigo = PlayerPrefs.GetFloat("PopInimigos");
        PlayerPrefs.SetFloat("PopInimigos", popularidadeInimigo);
        popInimigo_txtUI.text = popularidadeInimigo.ToString();
        barraPopInimigo.value = popularidadeInimigo;
        barraPopInimigo.maxValue = 100;



        tipoDessaBatalha = TipoBatalha.ELEICAO;
        currentState = BattleStates.START;
        if (canvasBatalha.GetComponent<Canvas>().enabled == true)
        {
            FluxoBatalha();
        }




        popularidadePlayer = PlayerPrefs.GetFloat("PopularidadeNaScene");
        pop_txtUI.text = Mathf.Round(popularidadePlayer).ToString();
        barraPop.value = popularidadePlayer;
        barraPop.maxValue = 100;


        // currentState = BattleStates.START;

    } // FIM START


    void Update()
    {
        print(somaPopPartido);
        pop_txtUI.text = Mathf.Round(popularidadePlayer).ToString();
        barraPop.value = popularidadePlayer;


        VerificaQteAtaques();
        if (canvasBatalha.GetComponent<Canvas>().enabled == true)
        {
            FluxoBatalha();
        }

    } // FIM UPDATE

    public void FluxoBatalha()
    {
        PlayerPrefs.SetInt("NaBatalha", 1);

        popularidadeInimigo = PlayerPrefs.GetFloat("PopInimigos");
        PlayerPrefs.SetFloat("PopInimigos", popularidadeInimigo);
        quantosInimigos = PlayerPrefs.GetInt("QuantosInimigos");

        PlayerPrefs.SetInt("QuantosInimigos", quantosInimigos);


        popInimigo_txtUI.text = popularidadeInimigo.ToString();
        barraPopInimigo.value = popularidadeInimigo;

        pop_txtUI.text = Mathf.Round(popularidadePlayer).ToString();
        barraPop.value = popularidadePlayer;


        Debug.Log(currentState);



        switch (currentState)
        {

            case BattleStates.START:
                HabilitaBotoes();
                DialogoEscolha();
                proximaMsg = false;
                popularidadeInimigo = PlayerPrefs.GetFloat("PopInimigos");

                print("Pop Inimigos" + PlayerPrefs.GetFloat("PopInimigos"));

                PopPersonagens();

                CalculoRetorica();

                break;

            case BattleStates.ESCOLHAJOGADOR:

                // dialogo.text = "O que você irá fazer?";

                if (playerAtacou == true)
                {
                    VerificaHpPlayer();
                    DireitaEsquerda();
                   

                    if (popularidadePlayer > 0 && popularidadeInimigo > 0)
                    {

                        StartCoroutine(VezInimigo());
                
                    }

                    playerAtacou = false;
                    MovimentosPlayer.gameObject.SetActive(false);


                }
                if (trocouPersonagem == true)
                {

                    VerificaHpPlayer();
                    trocouPersonagem = false;
                    CalculoRetorica();
                }
                break;

            case BattleStates.ESCOLHAINIMIGO:

                AtaquesInimigo();

                if (inimigoAtacou == true)
                {
                    VerificaHpInimigo();
                    DireitaEsquerda();


                    if (popularidadePlayer > 0 && popularidadeInimigo > 0)
                    {
                        currentState = BattleStates.ESCOLHAJOGADOR;


                    }
                    inimigoAtacou = false;
                }
                if (trocouInimigo == true)
                {
                    VerificaHpInimigo();
                    trocouInimigo = false;
                    StatusDeBatalhaInimigos();
                    CalculoRetorica();
                }


                break;

            case BattleStates.PERDEU:
                print("você perdeu");
                PlayerPrefs.SetInt("NaBatalha", 0);
                DesabilitaBotoes();
                ResetaSomaPop();
                break;

            case BattleStates.GANHOU:
                print("você ganhou");
                PlayerPrefs.SetInt("NaBatalha", 0);
                DesabilitaBotoes();
                ResetaSomaPop();

                break;

        }
    }

    public void Inicia()
    {
        currentState = BattleStates.START;
    }




    void VerificaHpPlayer()
    {


        if (popularidadePlayer < 0)
        {
            popularidadePlayer = 0;
        }

        PlayerPrefs.SetFloat("PopInimigos", popularidadeInimigo);





        if (popularidadePlayer <= 0)
        {
            // abre painel para trocar de personagem
            painelPartido.gameObject.SetActive(true);
            fecharPainel.gameObject.SetActive(true);

            if (Mathf.Round(somaPopPartido) <= 0)
            {
                currentState = BattleStates.PERDEU;


                StartCoroutine(TiraTodosDaScene());

            }



        }


        if (popularidadeInimigo <= 0 && PlayerPrefs.GetInt("PrimeiraVez") == 0)
        {
            quantosInimigos = PlayerPrefs.GetInt("QuantosInimigos") - 1;
            PlayerPrefs.SetInt("QuantosInimigos", quantosInimigos);
            print("trocou inimigo");

            trocouInimigo = true;
            print("quanto enemy " + PlayerPrefs.GetInt("QuantosInimigos"));
            HabilitaBotoes();

            if (quantosInimigos == 0)
            {

                currentState = BattleStates.GANHOU;

                StartCoroutine(TiraTodosDaScene());

            }

        }
    }

    void VerificaHpInimigo()
    {


        AtualizaPopPersonagens();


        if (popularidadePlayer > 0 && popularidadeInimigo > 0)
        {

            currentState = BattleStates.ESCOLHAJOGADOR;




        }
        if (popularidadePlayer <= 0)
        {
            // abre painel para trocar de personagem
            currentState = BattleStates.ESCOLHAJOGADOR;

            painelPartido.gameObject.SetActive(true);
            fecharPainel.gameObject.SetActive(true);


            if (Mathf.Round(somaPopPartido) <= 0)
            {
                currentState = BattleStates.PERDEU;

                StartCoroutine(TiraTodosDaScene());



            }

        }

        if (popularidadeInimigo <= 0 && PlayerPrefs.GetInt("PrimeiraVez") == 0)
        {
            quantosInimigos = PlayerPrefs.GetInt("QuantosInimigos") - 1;
            PlayerPrefs.SetInt("QuantosInimigos", quantosInimigos);
            print("trocou inimigo");
            barraPopInimigo.value = popularidadeInimigo;
            print("quanto enemy " + PlayerPrefs.GetInt("QuantosInimigos"));

            StatusDeBatalhaInimigos();
            trocouInimigo = true;
            HabilitaBotoes();

            if (quantosInimigos == 0)
            {
                currentState = BattleStates.GANHOU;

                StartCoroutine(TiraTodosDaScene());
            }


        }


    }



    public void TrocouDePersonagem()
    {
        trocouPersonagem = true;
        StatusDeBatalha();
        PopPersonagens();

        pop_txtUI.text = Mathf.Round(popularidadePlayer).ToString();
        barraPop.value = Mathf.Round(popularidadePlayer);
        barraPop.maxValue = 100;
        painelPartido.gameObject.SetActive(false);
        fecharPainel.gameObject.SetActive(false);

        QuantidadeAtaques();

        DesabilitaBotoes();


    }

    IEnumerator VezInimigo()
    {

        yield return new WaitForSeconds(2f);

        currentState = BattleStates.ESCOLHAINIMIGO;
        print(currentState);

    }



    IEnumerator TiraTodosDaScene()
    {
        yield return new WaitForSeconds(2f);

        if (PlayerPrefs.GetInt("LulaDentroScene") == 1)
        {
            PlayerPrefs.SetInt("LulaDentroScene", 0);
        }

        if (PlayerPrefs.GetInt("CiroDentroScene") == 1)
        {
            PlayerPrefs.SetInt("CiroDentroScene", 0);
        }
        if (PlayerPrefs.GetInt("BolsoDentroScene") == 1)
        {
            PlayerPrefs.SetInt("BolsoDentroScene", 0);

        }
        if (PlayerPrefs.GetInt("DilmaDentroScene") == 1)
        {
            PlayerPrefs.SetInt("DilmaDentroScene", 0);
        }
        if (PlayerPrefs.GetInt("SuplicyDentroScene") == 1)
        {
            PlayerPrefs.SetInt("SuplicyDentroScene", 0);
        }
        if (PlayerPrefs.GetInt("EneasDentroScene") == 1)
        {
            PlayerPrefs.SetInt("EneasDentroScene", 0);
        }

        //canvasBatalha.gameObject.SetActive(false);
        // canvasGame.gameObject.SetActive(true);

    }

    public void DesabilitaBotoes()
    {
        botao1.interactable = false;
        botao2.interactable = false;
    }
    public void HabilitaBotoes()
    {
        botao1.interactable = true;
        botao2.interactable = true;
    }


    //PARA VERIFICAR SE ACABOU A POPULARIDADE DE TODOS DENTRO DO PARTIDO
    public void SomaPartido()
    {
        // quantosPartido = meuPartido.Count;


        if (PlayerPrefs.GetInt("LulaDentroPartido") == 1)
        {
            somaPopPartido = Mathf.Round(Mathf.Round(somaPopPartido + Mathf.Round(PlayerPrefs.GetFloat("PopularidadeLula"))));

        }

        if (PlayerPrefs.GetInt("CiroDentroPartido") == 1)
        {
            somaPopPartido = Mathf.Round(Mathf.Round(somaPopPartido + Mathf.Round(PlayerPrefs.GetFloat("PopularidadeCiro"))));

        }
        if (PlayerPrefs.GetInt("BolsoDentroPartido") == 1)
        {
            somaPopPartido = Mathf.Round(Mathf.Round(somaPopPartido + Mathf.Round(PlayerPrefs.GetFloat("PopularidadeBolso"))));
        }
        if (PlayerPrefs.GetInt("DilmaDentroPartido") == 1)
        {
            somaPopPartido = Mathf.Round(Mathf.Round(somaPopPartido + Mathf.Round(PlayerPrefs.GetFloat("PopularidadeDilma"))));

        }
        if (PlayerPrefs.GetInt("SuplicyDentroPartido") == 1)
        {
            somaPopPartido = Mathf.Round(Mathf.Round(somaPopPartido + Mathf.Round(PlayerPrefs.GetFloat("PopularidadeSuplicy"))));

        }
        if (PlayerPrefs.GetInt("EneasDentroPartido") == 1)
        {
            somaPopPartido = Mathf.Round(Mathf.Round(somaPopPartido + Mathf.Round(PlayerPrefs.GetFloat("PopularidadeEneas"))));

        }

        print(somaPopPartido);
    }

    public void PopPersonagens()
    {
        if (PlayerPrefs.GetInt("LulaDentroScene") == 1)
        {
            popularidadePlayer = Mathf.Round(PlayerPrefs.GetFloat("PopularidadeLula"));

        }

        if (PlayerPrefs.GetInt("CiroDentroScene") == 1)
        {
            popularidadePlayer = Mathf.Round(PlayerPrefs.GetFloat("PopularidadeCiro"));
        }
        if (PlayerPrefs.GetInt("BolsoDentroScene") == 1)
        {
            popularidadePlayer = Mathf.Round(PlayerPrefs.GetFloat("PopularidadeBolso"));

        }
        if (PlayerPrefs.GetInt("DilmaDentroScene") == 1)
        {
            popularidadePlayer = Mathf.Round(PlayerPrefs.GetFloat("PopularidadeDilma"));
        }
        if (PlayerPrefs.GetInt("SuplicyDentroScene") == 1)
        {
            popularidadePlayer = Mathf.Round(PlayerPrefs.GetFloat("PopularidadeSuplicy"));
        }
        if (PlayerPrefs.GetInt("EneasDentroScene") == 1)
        {
            popularidadePlayer = Mathf.Round(PlayerPrefs.GetFloat("PopularidadeEneas"));
        }
    }

    public void ResetaSomaPop()
    {
        somaPopPartido = 0;

    }

    public void AtualizaPopPersonagens()
    {
        if (PlayerPrefs.GetInt("LulaDentroScene") == 1)
        {
            PlayerPrefs.SetFloat("PopularidadeLula", Mathf.Round(popularidadePlayer));
            if (PlayerPrefs.GetFloat("PopularidadeLula") <= 0)
            {
                LulaPartido.interactable = false;
            }
        }

        if (PlayerPrefs.GetInt("CiroDentroScene") == 1)
        {
            PlayerPrefs.SetFloat("PopularidadeCiro", Mathf.Round(popularidadePlayer));
            if (PlayerPrefs.GetFloat("PopularidadeCiro") <= 0)
            {
                CiroPartido.interactable = false;
            }
        }
        if (PlayerPrefs.GetInt("BolsoDentroScene") == 1)
        {
            PlayerPrefs.SetFloat("PopularidadeBolso", Mathf.Round(popularidadePlayer));
            if (PlayerPrefs.GetFloat("PopularidadeBolso") <= 0)
            {
                BolsoPartido.interactable = false;
            }
        }
        if (PlayerPrefs.GetInt("DilmaDentroScene") == 1)
        {
            PlayerPrefs.SetFloat("PopularidadeDilma", Mathf.Round(popularidadePlayer));
            if (PlayerPrefs.GetFloat("PopularidadeDilma") <= 0)
            {
                DilmaPartido.interactable = false;
            }
        }
        if (PlayerPrefs.GetInt("SuplicyDentroScene") == 1)
        {
            PlayerPrefs.SetFloat("PopularidadeSuplicy", Mathf.Round(popularidadePlayer));
            if (PlayerPrefs.GetFloat("PopularidadeSuplicy") <= 0)
            {
                SuplicyPartido.interactable = false;
            }
        }
        if (PlayerPrefs.GetInt("EneasDentroScene") == 1)
        {
            PlayerPrefs.SetFloat("PopularidadeEneas", Mathf.Round(popularidadePlayer));
            if (PlayerPrefs.GetFloat("PopularidadeEneas") <= 0)
            {
                EneasPartido.interactable = false;
            }
        }
    }

    public void PainelMovimentos()
    {
        if (PlayerPrefs.GetInt("LulaDentroScene") == 1)
        {
            MovimentosLula.gameObject.SetActive(true);

            MovimentosCiro.gameObject.SetActive(false);
            MovimentosBolso.gameObject.SetActive(false);
            MovimentosDilma.gameObject.SetActive(false);
            MovimentosSuplicy.gameObject.SetActive(false);
            MovimentosEneas.gameObject.SetActive(false);

        }

        if (PlayerPrefs.GetInt("CiroDentroScene") == 1)
        {
            MovimentosCiro.gameObject.SetActive(true);

            MovimentosLula.gameObject.SetActive(false);
            MovimentosBolso.gameObject.SetActive(false);
            MovimentosDilma.gameObject.SetActive(false);
            MovimentosSuplicy.gameObject.SetActive(false);
            MovimentosEneas.gameObject.SetActive(false);
        }

        if (PlayerPrefs.GetInt("BolsoDentroScene") == 1)
        {
            MovimentosBolso.gameObject.SetActive(true);

            MovimentosCiro.gameObject.SetActive(false);
            MovimentosLula.gameObject.SetActive(false);
            MovimentosDilma.gameObject.SetActive(false);
            MovimentosSuplicy.gameObject.SetActive(false);
            MovimentosEneas.gameObject.SetActive(false);
        }

        if (PlayerPrefs.GetInt("DilmaDentroScene") == 1)
        {
            MovimentosDilma.gameObject.SetActive(true);

            MovimentosCiro.gameObject.SetActive(false);
            MovimentosBolso.gameObject.SetActive(false);
            MovimentosLula.gameObject.SetActive(false);
            MovimentosSuplicy.gameObject.SetActive(false);
            MovimentosEneas.gameObject.SetActive(false);
        }

        if (PlayerPrefs.GetInt("SuplicyDentroScene") == 1)
        {
            MovimentosSuplicy.gameObject.SetActive(true);

            MovimentosCiro.gameObject.SetActive(false);
            MovimentosBolso.gameObject.SetActive(false);
            MovimentosDilma.gameObject.SetActive(false);
            MovimentosLula.gameObject.SetActive(false);
            MovimentosEneas.gameObject.SetActive(false);
        }

        if (PlayerPrefs.GetInt("EneasDentroScene") == 1)
        {
            MovimentosEneas.gameObject.SetActive(true);

            MovimentosCiro.gameObject.SetActive(false);
            MovimentosBolso.gameObject.SetActive(false);
            MovimentosDilma.gameObject.SetActive(false);
            MovimentosSuplicy.gameObject.SetActive(false);
            MovimentosLula.gameObject.SetActive(false);
        }
    }


    public void StatusDeBatalha()
    {
        if (PlayerPrefs.GetInt("LulaDentroScene") == 1)
        {
            autoridadePlayer = PlayerPrefs.GetFloat("AutoridadeLula");
            levelPlayer = PlayerPrefs.GetInt("LevelLula");
            apoioMidiaPlayer = PlayerPrefs.GetFloat("ApoioMidiaLula");
            confiancaPlayer = PlayerPrefs.GetInt("ConfiancaLula");
            retoricaPlayer = PlayerPrefs.GetFloat("RetoricaLula");

        }

        if (PlayerPrefs.GetInt("CiroDentroScene") == 1)
        {
            autoridadePlayer = PlayerPrefs.GetFloat("AutoridadeCiro");
            levelPlayer = PlayerPrefs.GetInt("LevelCiro");
            apoioMidiaPlayer = PlayerPrefs.GetFloat("ApoioMidiaCiro");
            confiancaPlayer = PlayerPrefs.GetInt("ConfiancaCiro");
            retoricaPlayer = PlayerPrefs.GetFloat("RetoricaCiro");

        }
        if (PlayerPrefs.GetInt("BolsoDentroScene") == 1)
        {
            autoridadePlayer = PlayerPrefs.GetFloat("AutoridadeBolso");
            levelPlayer = PlayerPrefs.GetInt("LevelBolso");
            apoioMidiaPlayer = PlayerPrefs.GetFloat("ApoioMidiaBolso");
            confiancaPlayer = PlayerPrefs.GetInt("ConfiancaBolso");
            retoricaPlayer = PlayerPrefs.GetFloat("RetoricaBolso");

        }
        if (PlayerPrefs.GetInt("DilmaDentroScene") == 1)
        {
            autoridadePlayer = PlayerPrefs.GetFloat("AutoridadeDilma");
            levelPlayer = PlayerPrefs.GetInt("LevelDilma");
            apoioMidiaPlayer = PlayerPrefs.GetFloat("ApoioMidiaDilma");
            confiancaPlayer = PlayerPrefs.GetInt("ConfiancaDilma");
            retoricaPlayer = PlayerPrefs.GetFloat("RetoricaDilma");

        }
        if (PlayerPrefs.GetInt("SuplicyDentroScene") == 1)
        {
            autoridadePlayer = PlayerPrefs.GetFloat("AutoridadeSuplicy");
            levelPlayer = PlayerPrefs.GetInt("LevelSuplicy");
            apoioMidiaPlayer = PlayerPrefs.GetFloat("ApoioMidiaSuplicy");
            confiancaPlayer = PlayerPrefs.GetInt("ConfiancaSuplicy");
            retoricaPlayer = PlayerPrefs.GetFloat("RetoricaSuplicy");

        }
        if (PlayerPrefs.GetInt("EneasDentroScene") == 1)
        {
            autoridadePlayer = PlayerPrefs.GetFloat("AutoridadeEneas");
            levelPlayer = PlayerPrefs.GetInt("LevelEneas");
            apoioMidiaPlayer = PlayerPrefs.GetFloat("ApoioMidiaEneas");
            confiancaPlayer = PlayerPrefs.GetInt("ConfiancaEneas");
            retoricaPlayer = PlayerPrefs.GetFloat("RetoricaEneas");

        }
    }

    public void StatusDeBatalhaInimigos()
    {
        if (PlayerPrefs.GetInt("LulaInimigoScene") == 1)
        {
            autoridadeInimigo = PlayerPrefs.GetFloat("AutoridadeLulaInimigo");
            levelInimigo = PlayerPrefs.GetInt("LevelLulaInimigo");
            apoioMidiaInimigo = PlayerPrefs.GetFloat("ApoioMidiaLulaInimigo");
            retoricaInimigo = PlayerPrefs.GetFloat("RetoricaLulaInimigo");
            confiancaInimigo = PlayerPrefs.GetInt("ConfiancaLulaInimigo");


        }

        if (PlayerPrefs.GetInt("CiroInimigoScene") == 1)
        {
            autoridadeInimigo = PlayerPrefs.GetFloat("AutoridadeCiroInimigo");
            levelInimigo = PlayerPrefs.GetInt("LevelCiroInimigo");
            apoioMidiaInimigo = PlayerPrefs.GetFloat("ApoioMidiaCiroInimigo");
            retoricaInimigo = PlayerPrefs.GetFloat("RetoricaCiroInimigo");
            confiancaInimigo = PlayerPrefs.GetInt("ConfiancaCiroInimigo");
        }
        if (PlayerPrefs.GetInt("BolsoInimigoScene") == 1)
        {
            autoridadeInimigo = PlayerPrefs.GetFloat("AutoridadeBolsoInimigo");
            levelInimigo = PlayerPrefs.GetInt("LevelBolsoInimigo");
            apoioMidiaInimigo = PlayerPrefs.GetFloat("ApoioMidiaBolsoInimigo");
            retoricaInimigo = PlayerPrefs.GetFloat("RetoricaBolsoInimigo");
            confiancaInimigo = PlayerPrefs.GetInt("ConfiancaBolsoInimigo");

        }
        if (PlayerPrefs.GetInt("DilmaInimigoScene") == 1)
        {
            autoridadeInimigo = PlayerPrefs.GetFloat("AutoridadeDilmaInimigo");
            levelInimigo = PlayerPrefs.GetInt("LevelDilmaInimigo");
            apoioMidiaInimigo = PlayerPrefs.GetFloat("ApoioMidiaDilmaInimigo");
            retoricaInimigo = PlayerPrefs.GetFloat("RetoricaDilmaInimigo");
            confiancaInimigo = PlayerPrefs.GetInt("ConfiancaDilmaInimigo");
        }
        if (PlayerPrefs.GetInt("SuplicyInimigoScene") == 1)
        {
            autoridadeInimigo = PlayerPrefs.GetFloat("AutoridadeSuplicyInimigo");
            levelInimigo = PlayerPrefs.GetInt("LevelSuplicyInimigo");
            apoioMidiaInimigo = PlayerPrefs.GetFloat("ApoioMidiaSuplicyInimigo");
            retoricaInimigo = PlayerPrefs.GetFloat("RetoricaSuplicyInimigo");
            confiancaInimigo = PlayerPrefs.GetInt("ConfiancaSuplicyInimigo");
        }
        if (PlayerPrefs.GetInt("EneasInimigoScene") == 1)
        {
            autoridadeInimigo = PlayerPrefs.GetFloat("AutoridadeEneasInimigo");
            levelInimigo = PlayerPrefs.GetInt("LevelEneasInimigo");
            apoioMidiaInimigo = PlayerPrefs.GetFloat("ApoioMidiaEneasInimigo");
            retoricaInimigo = PlayerPrefs.GetFloat("RetoricaEneasInimigo");
            confiancaInimigo = PlayerPrefs.GetInt("ConfiancaEneasInimigo");
        }
    }


    // --------------- ATAQUES PLAYER ------------------ //


    // POPULISMO - tira popularidade
    public void AtaquePopulismo()
    {
        MitouLacrou();
        Protegido();
        CalculoConfiancaPlayer();

        autoridadeAtaque = 40;
        danoPlayer = Mathf.Round(Mathf.Round(Mathf.Round(((2 * levelPlayer / 5 + 2) * autoridadePlayer * autoridadeAtaque / apoioMidiaInimigo) / 50) + 2) * mitouLacrou) * confianca;

        print("Esse é o dano " + danoPlayer);
        print("autoridade" + autoridadePlayer);
        print("apoio da midia do inimigo" + apoioMidiaInimigo);
        print("level player" + levelPlayer);


        if (qtePopulismo <= 0)
        {
            ataquePopulismo.interactable = false;
        }
        if (qtePopulismo > 0)
        {
            ataquePopulismo.interactable = true;

        }


        if (popularidadeInimigo >= danoPlayer && qtePopulismo > 0)
        {

            popularidadeInimigo = popularidadeInimigo - danoPlayer;
            qtePopulismo = qtePopulismo - 1;
            AtualizaQuantidadeAtaques();

            if (confianca == 0)
            {
                dialogo.text = "Seu político errou o ataque porque não foi confiante";
            }
            if (confianca != 0)
            {
                dialogo.text = "Você usou Populismo e tirou " + danoPlayer + " de popularidade do oponente";

            }


            PlayerPrefs.SetFloat("PopInimigos", popularidadeInimigo);
            popularidadeInimigo = PlayerPrefs.GetFloat("PopInimigos"); //

            popInimigo_txtUI.text = popularidadeInimigo.ToString();
            barraPopInimigo.value = popularidadeInimigo;

            pop_txtUI.text = Mathf.Round(popularidadePlayer).ToString();
            barraPop.value = popularidadePlayer;


            DesabilitaBotoes();

        
            playerAtacou = true;

            print("Ataque 1 finalizado");

        }

        if (popularidadeInimigo < danoPlayer && playerAtacou == false && qtePopulismo > 0)
        {

            qtePopulismo = qtePopulismo - 1;
            AtualizaQuantidadeAtaques();

            danoPlayer = popularidadeInimigo * confianca;
            popularidadeInimigo = popularidadeInimigo - danoPlayer;

            if (confianca == 0)
            {
                dialogo.text = "Seu político errou o ataque porque não foi confiante";
            }
            if (confianca != 0)
            {
                dialogo.text = "Você usou Populismo e tirou " + danoPlayer + " de popularidade do oponente";

            }

            PlayerPrefs.SetFloat("PopInimigos", popularidadeInimigo);
            popularidadeInimigo = PlayerPrefs.GetFloat("PopInimigos"); //

            popInimigo_txtUI.text = popularidadeInimigo.ToString();
            barraPopInimigo.value = popularidadeInimigo;

            pop_txtUI.text = Mathf.Round(popularidadePlayer).ToString();
            barraPop.value = popularidadePlayer;


            DesabilitaBotoes();
         
                playerAtacou = true;
         
            print("ataque 1 finalizado");
        }

    }

    public void SelecionaPopulismo()
    {
        QuantidadeAtaques();

        infoAtaque.text = "Diminui popularidade do oponente";
        qte_Ataque.text = "Qte.: " + qtePopulismo + "/5";
        dialogo.text = "Utilizar o ataque Populismo?";

    }

    // HABEAS CORPUS - aumenta apoio da mídia
    public void AtaqueHabeasCorpus()
    {
        CalculoConfiancaPlayer();
        MitouLacrou();

        autoridadeAtaque = 40;

        if (qteHabeasCorpus <= 0)
        {
            ataqueHabeasCorpus.interactable = false;
        }
        if (qteHabeasCorpus > 0)
        {
            danoPlayer = Mathf.Round(Mathf.Round(Mathf.Round(((2 * levelPlayer / 5 + 2) * apoioMidiaPlayer * autoridadeAtaque / apoioMidiaPlayer) / 50) + 2) * mitouLacrou) * confianca;
            ataqueHabeasCorpus.interactable = true;
            apoioMidiaPlayer = apoioMidiaPlayer + danoPlayer;
            if (confianca == 0)
            {
                dialogo.text = "Seu político errou o ataque porque não foi confiante";

            }
            if (confianca != 0)
            {
                dialogo.text = "Você usou Habeas corpus. Agora, seu Apoio da Mídia aumentou para " + apoioMidiaPlayer;

            }
            qteHabeasCorpus = qteHabeasCorpus - 1;
            AtualizaQuantidadeAtaques();
        }




        DesabilitaBotoes();

        playerAtacou = true;
        print("Ataque Habeas finalizado");

    }

    public void SelecionaHabeasCorpus()
    {
        infoAtaque.text = "Aumenta seu Apoio da Mídia (defesa)";
        qte_Ataque.text = "Qte.: " + qteHabeasCorpus + "/3";
        dialogo.text = "Utilizar o ataque Habeas Corpus?";

    }

    // MILITANCIA - aumenta autoridade
    public void AtaqueMilitancia()
    {
        MitouLacrou();

        CalculoConfiancaPlayer();

        if (qteMilitancia <= 0)
        {
            ataqueMilitancia.interactable = false;
        }
        if (qteMilitancia > 0)
        {

            ataqueMilitancia.interactable = true;
            danoPlayer = Mathf.Round(Mathf.Round(Mathf.Round(((2 * levelPlayer / 5 + 2) * autoridadePlayer * autoridadeAtaque / autoridadePlayer) / 50) + 2) * mitouLacrou) * confianca;
            autoridadePlayer = autoridadePlayer + danoPlayer;
            if (confianca == 0)
            {
                dialogo.text = "Seu político errou o ataque porque não foi confiante";

            }
            if (confianca != 0)
            {
                dialogo.text = "Você usou sua Miliância. Agora, sua autoridade aumentou para " + autoridadePlayer;

            }

            qteMilitancia = qteMilitancia - 1;
            AtualizaQuantidadeAtaques();

        }


        DesabilitaBotoes();

        playerAtacou = true;
        print("Ataque Militancia finalizado");
    }

    public void SelecionaMilitancia()
    {
        infoAtaque.text = "Aumenta sua Autoridade (ataque)";
        qte_Ataque.text = "Qte.: " + qteMilitancia + "/3";
        dialogo.text = "Utilizar o ataque Militancia?";

    }

    // DENUNCIA SUPREMO - tira autoridade
    public void AtaqueDenuciaSupremo()
    {
        Protegido();

        MitouLacrou();

        CalculoConfiancaPlayer();

        if (qteDenunciaSupremo <= 0)
        {
            ataqueDenunciaSupremo.interactable = false;
        }
        if (qteDenunciaSupremo > 0)
        {

            ataqueDenunciaSupremo.interactable = true;

            autoridadeAtaque = 40;

            danoPlayer = Mathf.Round(Mathf.Round(Mathf.Round(((2 * levelPlayer / 5 + 2) * autoridadePlayer * autoridadeAtaque / autoridadeInimigo) / 50) + 2) * mitouLacrou) * confianca;
            autoridadeInimigo = autoridadeInimigo - danoPlayer;

            if (confianca == 0)
            {
                dialogo.text = "Seu político errou o ataque porque não foi confiante";

            }
            if (confianca != 0)
            {
                dialogo.text = "Você denunciou seu oponente ao Supremo, diminuindo a autoridade para " + autoridadeInimigo;

            }

            qteDenunciaSupremo = qteDenunciaSupremo - 1;
            AtualizaQuantidadeAtaques();

        }


        DesabilitaBotoes();

        playerAtacou = true;
        print("Ataque Denúncia ao Supremo finalizado");
    }

    public void SelecionaDenunciaSupremo()
    {
        infoAtaque.text = "Diminuí Autoridade (ataque) de seu oponente.";
        qte_Ataque.text = "Qte.: " + qteDenunciaSupremo + "/3";
        dialogo.text = "Utilizar o ataque Denuncia ao Supremo?";

    }





    // ------------------- ATAQUES PARA ALUGAR ---------------- //

    //  ELOGIO JORNAL - aumenta popularidade
    public void AtaqueElogioJornal()
    {
        if (qteElogioJornal <= 0)
        {
            ataqueElogioJornal.interactable = false;
        }
        if (qteElogioJornal > 0)
        {

            ataqueElogioJornal.interactable = true;


            danoPlayer = 20;
            popularidadePlayer = popularidadePlayer + danoPlayer;
            dialogo.text = "Você foi elogiado em uma matéria do Jornal. Agora, sua popularidade aumentou para " + popularidadePlayer;
            qteElogioJornal = qteElogioJornal - 1;
            AtualizaQuantidadeAtaques();




        }



        DesabilitaBotoes();

        playerAtacou = true;
        print("Ataque Elogio no Jornal Finalizado. Ganho foi de: " + danoPlayer);
    }

    public void SelecionaElogioJornal()
    {
        infoAtaque.text = "Aumenta sua Popularidade";
        qte_Ataque.text = "Qte.: " + qteElogioJornal + "/1";
        dialogo.text = "Utilizar o ataque Elogio do Jornal?";

    }

    // FORO PRIVILEGIADO - defesa 100% de um ataque
    public void AtaqueForoPrivilegiado()
    {
        if (qteForoPrivilegiado <= 0)
        {
            ataqueForoPrivilegiado.interactable = false;
        }
        if (qteForoPrivilegiado > 0)
        {

            ataqueForoPrivilegiado.interactable = true;


            playerProtegido = true;
            dialogo.text = "Você utilizou seu Foro Privilegiado e está 100% protegido de um ataque ";
            qteForoPrivilegiado = qteForoPrivilegiado - 1;
            AtualizaQuantidadeAtaques();



        }



        DesabilitaBotoes();

        playerAtacou = true;
        print("Ataque Foro Privilegiado Finalizado. Dano Inimigo " + danoInimigo);
    }

    public void SelecionaForoPrivilegiado()
    {
        infoAtaque.text = "Protege 100% de um ataque";
        qte_Ataque.text = "Qte.: " + qteForoPrivilegiado + "/2";
        dialogo.text = "Utilizar o ataque Foro Privilegiado?";

    }

    // VAZAR LIGACOES - tira apoio da mídia do oponente

    public void AtaqueVazarLigacoes()
    {
        MitouLacrou();
        Protegido();
        CalculoConfiancaPlayer();
        autoridadeAtaque = 30;

        if (qteVazarLigacoes <= 0)
        {
            ataqueVazarLigacoes.interactable = false;
        }
        if (qteVazarLigacoes > 0)
        {

            ataqueVazarLigacoes.interactable = true;

            danoPlayer = Mathf.Round(Mathf.Round(Mathf.Round(((2 * levelPlayer / 5 + 2) * apoioMidiaPlayer * autoridadeAtaque / apoioMidiaInimigo) / 50) + 2) * mitouLacrou) * confianca;
            if (apoioMidiaInimigo > danoPlayer)
            {
                apoioMidiaInimigo = apoioMidiaInimigo - danoPlayer;

                if (confianca == 0)
                {
                    dialogo.text = "Seu político errou o ataque porque não foi confiante";

                }
                if (confianca != 0)
                {
                    dialogo.text = "Você vazou ligações comprometedoras de seu oponente e tirou " + danoPlayer + " de Apoio da Mídia";

                }

                qteVazarLigacoes = qteVazarLigacoes - 1;
                AtualizaQuantidadeAtaques();

            }
            if (apoioMidiaInimigo < danoPlayer)
            {
                apoioMidiaInimigo = 1;
                if (confianca == 0)
                {
                    dialogo.text = "Seu político errou o ataque porque não foi confiante";

                }
                if (confianca != 0)
                {
                    dialogo.text = "Você vazou ligações comprometedoras de seu oponente e tirou " + danoPlayer + " de Apoio da Mídia";

                }                qteVazarLigacoes = qteVazarLigacoes - 1;
                AtualizaQuantidadeAtaques();

            }
            if (apoioMidiaInimigo <= 1 && qteVazarLigacoes > 0)
            {
                ataqueVazarLigacoes.interactable = false;
                dialogo.text = "O oponente já está com o mínimo de Apoio da Mídia";

            }





        }



        DesabilitaBotoes();

        playerAtacou = true;
        print("Ataque Vazar Ligações Finalizado. Apoio da Mídia do oponente " + apoioMidiaInimigo);
    }

    public void SelecionaVazarLigacoes()
    {
        infoAtaque.text = "Diminuí Apoio da Mídia (defesa) do oponente.";
        qte_Ataque.text = "Qte.: " + qteVazarLigacoes + "/3";
        dialogo.text = "Utilizar o ataque Vazar Ligações?";

    }

    // AD HOMINEM - tira confiança (precisão) do oponente
    public void AtaqueAdHominem()
    {
        MitouLacrou();
        Protegido();
        CalculoConfiancaPlayer();
        autoridadeAtaque = 10;

        if (qteAdHominem <= 0)
        {
            ataqueAdHominem.interactable = false;
        }
        if (qteAdHominem > 0)
        {

            ataqueAdHominem.interactable = true;

            danoPlayer = Mathf.Round(Mathf.Round(Mathf.Round(((2 * levelPlayer / 5 + 2) * confiancaPlayer * autoridadeAtaque / confiancaInimigo) / 100) + 2) * mitouLacrou) * confianca;
            if (confiancaInimigo > danoPlayer)
            {
                confiancaInimigo = (int)(confiancaInimigo - danoPlayer);
                if (confianca == 0)
                {
                    dialogo.text = "Seu político errou o ataque porque não foi confiante";

                }
                if (confianca != 0)
                {
                    dialogo.text = "Você utilizou argumentos Ad Hominem e tirou " + danoPlayer + " de Confiança do seu oponente";

                }
                qteAdHominem = qteAdHominem - 1;
                AtualizaQuantidadeAtaques();

            }
            if (confiancaInimigo < danoPlayer)
            {
                confiancaInimigo = 1;
                if (confianca == 0)
                {
                    dialogo.text = "Seu político errou o ataque porque não foi confiante";

                }
                if (confianca != 0)
                {
                    dialogo.text = "Você utilizou argumentos Ad Hominem e tirou " + danoPlayer + " de Confiança do seu oponente";

                }                qteAdHominem = qteAdHominem - 1;
                AtualizaQuantidadeAtaques();

            }
            if (confiancaInimigo <= 1 && qteAdHominem > 0)
            {
                ataqueAdHominem.interactable = false;
                dialogo.text = "O oponente já está com o mínimo de Confiança";

            }





        }



        DesabilitaBotoes();

        playerAtacou = true;
        print("Ataque Ad Hominem Finalizado. Confiança do oponente: " + confiancaInimigo);
    }

    public void SelecionaAdHominem()
    {
        infoAtaque.text = "Diminuí a confiança (precisão) do oponente.";
        qte_Ataque.text = "Qte.: " + qteAdHominem + "/3";
        dialogo.text = "Utilizar o ataque Ad Hominem?";

    }

    // APOIO CENTRAO - aumenta confiança do player
    public void AtaqueApoioCentrao()
    {
        MitouLacrou();
        Protegido();
        CalculoConfiancaPlayer();
        autoridadeAtaque = 40;

        if (qteApoioCentrao <= 0)
        {
            ataqueApoioCentrao.interactable = false;
        }
        if (qteApoioCentrao > 0)
        {

            ataqueApoioCentrao.interactable = true;

            danoPlayer = Mathf.Round(Mathf.Round(Mathf.Round(((2 * levelPlayer / 5 + 2) * confiancaPlayer * autoridadeAtaque / confiancaPlayer) / 50) + 2) * mitouLacrou) * confianca;


            confiancaPlayer = (int)(confiancaPlayer + danoPlayer);
            if (confianca == 0)
            {
                dialogo.text = "Seu político errou o ataque porque não foi confiante";

            }
            if (confianca != 0)
            {
                dialogo.text = "Você conquistou apoio do Centrão e aumentou " + danoPlayer + " de sua Retórica.";

            }
            qteApoioCentrao = qteApoioCentrao  - 1;
            AtualizaQuantidadeAtaques();


        }



        DesabilitaBotoes();

        playerAtacou = true;
        print("Ataque Apoio Centrao Finalizado. Sua confiança: " + confiancaPlayer);
    }

    public void SelecionaApoioCentrao()
    {
        infoAtaque.text = "Aumenta sua confiaça (precisão).";
        qte_Ataque.text = "Qte.: " + qteApoioCentrao + "/3";
        dialogo.text = "Utilizar o ataque Apoio Centrão?";

    }

    // -------------------- QTE ATAQUES ------------------------- //

    public void QuantidadeAtaques()
    {
        if (PlayerPrefs.GetInt("LulaDentroScene") == 1)
        {
            qtePopulismo = qtePopulismoLula;
            qteHabeasCorpus = qteHabeasLula;
            qteMilitancia = qteMilitanciaLula;
            qteElogioJornal = qteElogioLula;
            qteDenunciaSupremo = qteDenunciaSupremoLula;
            qteForoPrivilegiado = qteForoLula;
            qteVazarLigacoes = qteVazarLula;
            qteAdHominem = qteAdHominemLula;
            qteApoioCentrao = qteApoioCentraoLula;

        }

        if (PlayerPrefs.GetInt("CiroDentroScene") == 1)
        {
            qtePopulismo = qtePopulismoCiro;
            qteHabeasCorpus = qteHabeasCiro;
            qteMilitancia = qteMilitanciaCiro;
            qteElogioJornal = qteElogioCiro;
            qteDenunciaSupremo = qteDenunciaSupremoCiro;
            qteForoPrivilegiado = qteForoCiro;
            qteVazarLigacoes = qteVazarCiro;
            qteAdHominem = qteAdHominemCiro;
            qteApoioCentrao = qteApoioCentraoCiro;

        }

        if (PlayerPrefs.GetInt("BolsoDentroScene") == 1)
        {
            qtePopulismo = qtePopulismoBolso;
            qteHabeasCorpus = qteHabeasBolso;
            qteMilitancia = qteMilitanciaBolso;
            qteElogioJornal = qteElogioBolso;
            qteDenunciaSupremo = qteDenunciaSupremoBolso;
            qteForoPrivilegiado = qteForoBolso;
            qteVazarLigacoes = qteVazarBolso;
            qteAdHominem = qteAdHominemBolso;
            qteApoioCentrao = qteApoioCentraoBolso;

        }

        if (PlayerPrefs.GetInt("DilmaDentroScene") == 1)
        {
            qtePopulismo = qtePopulismoDilma;
            qteHabeasCorpus = qteHabeasDilma;
            qteMilitancia = qteMilitanciaDilma;
            qteElogioJornal = qteElogioDilma;
            qteDenunciaSupremo = qteDenunciaSupremoDilma;
            qteForoPrivilegiado = qteForoDilma;
            qteVazarLigacoes = qteVazarDilma;
            qteAdHominem = qteAdHominemDilma;
            qteApoioCentrao = qteApoioCentraoDilma;

        }

        if (PlayerPrefs.GetInt("SuplicyDentroScene") == 1)
        {
            qtePopulismo = qtePopulismoSuplicy;
            qteHabeasCorpus = qteHabeasSuplicy;
            qteMilitancia = qteMilitanciaSuplicy;
            qteElogioJornal = qteElogioSuplicy;
            qteDenunciaSupremo = qteDenunciaSupremoSuplicy;
            qteForoPrivilegiado = qteForoSuplicy;
            qteVazarLigacoes = qteVazarSuplicy;
            qteAdHominem = qteAdHominemSuplicy;
            qteApoioCentrao = qteApoioCentraoSuplicy;

        }


        if (PlayerPrefs.GetInt("EneasDentroScene") == 1)
        {
            qtePopulismo = qtePopulismoEneas;
            qteHabeasCorpus = qteHabeasEneas;
            qteMilitancia = qteMilitanciaEneas;
            qteElogioJornal = qteElogioEneas;
            qteDenunciaSupremo = qteDenunciaSupremoEneas;
            qteForoPrivilegiado = qteForoEneas;
            qteVazarLigacoes = qteVazarEneas;
            qteAdHominem = qteAdHominemEneas;
            qteApoioCentrao = qteApoioCentraoEneas;
        }

        VerificaQteAtaques();
    }

    public void AtualizaQuantidadeAtaques()
    {
        if (PlayerPrefs.GetInt("LulaDentroScene") == 1)
        {
            qtePopulismoLula = qtePopulismo;
            qteHabeasLula = qteHabeasCorpus;
            qteMilitanciaLula = qteMilitancia;
            qteElogioLula = qteElogioJornal;
            qteDenunciaSupremoLula = qteDenunciaSupremo;
            qteForoLula = qteForoPrivilegiado;
            qteVazarLula = qteVazarLigacoes;
            qteAdHominemLula = qteAdHominem;
            qteApoioCentraoLula = qteApoioCentrao;

        }

        if (PlayerPrefs.GetInt("CiroDentroScene") == 1)
        {
            qtePopulismoCiro = qtePopulismo;
            qteHabeasCiro = qteHabeasCorpus;
            qteMilitanciaCiro = qteMilitancia;
            qteElogioCiro = qteElogioJornal;
            qteDenunciaSupremoCiro = qteDenunciaSupremo;
            qteForoCiro = qteForoPrivilegiado;
            qteVazarCiro = qteVazarLigacoes;
            qteAdHominemCiro = qteAdHominem;
            qteApoioCentraoCiro = qteApoioCentrao;


        }

        if (PlayerPrefs.GetInt("BolsoDentroScene") == 1)
        {
            qtePopulismoBolso = qtePopulismo;
            qteHabeasBolso = qteHabeasCorpus;
            qteMilitanciaBolso = qteMilitancia;
            qteElogioBolso = qteElogioJornal;
            qteDenunciaSupremoBolso = qteDenunciaSupremo;
            qteForoBolso = qteForoPrivilegiado;
            qteVazarBolso = qteVazarLigacoes;
            qteAdHominemBolso = qteAdHominem;
            qteApoioCentraoBolso = qteApoioCentrao;

        }

        if (PlayerPrefs.GetInt("DilmaDentroScene") == 1)
        {
            qtePopulismoDilma = qtePopulismo;
            qteHabeasDilma = qteHabeasCorpus;
            qteMilitanciaDilma = qteMilitancia;
            qteElogioDilma = qteElogioJornal;
            qteDenunciaSupremoDilma = qteDenunciaSupremo;
            qteForoDilma = qteForoPrivilegiado;
            qteVazarDilma = qteVazarLigacoes;
            qteAdHominemDilma = qteAdHominem;
            qteApoioCentraoDilma = qteApoioCentrao;

        }

        if (PlayerPrefs.GetInt("SuplicyDentroScene") == 1)
        {
            qtePopulismoSuplicy = qtePopulismo;
            qteHabeasSuplicy = qteHabeasCorpus;
            qteMilitanciaSuplicy = qteMilitancia;
            qteElogioSuplicy = qteElogioJornal;
            qteDenunciaSupremoSuplicy = qteDenunciaSupremo;
            qteForoSuplicy = qteForoPrivilegiado;
            qteVazarSuplicy = qteVazarLigacoes;
            qteAdHominemSuplicy = qteAdHominem;
            qteApoioCentraoSuplicy = qteApoioCentrao;

        }

        if (PlayerPrefs.GetInt("EneasDentroScene") == 1)
        {
            qtePopulismoEneas = qtePopulismo;
            qteHabeasEneas = qteHabeasCorpus;
            qteMilitanciaEneas = qteMilitancia;
            qteElogioEneas = qteElogioJornal;
            qteDenunciaSupremoEneas = qteDenunciaSupremo;
            qteForoEneas = qteForoPrivilegiado;
            qteVazarEneas = qteVazarLigacoes;
            qteAdHominemEneas = qteAdHominem;
            qteApoioCentraoEneas = qteApoioCentrao;
        }
    }

    public void ResetaQuantidadeAtaques()
    {
        qtePopulismoLula = 5;
        qtePopulismoCiro = 5;
        qtePopulismoBolso = 5;
        qtePopulismoDilma = 5;
        qtePopulismoSuplicy = 5;
        qtePopulismoEneas = 5;

        qteHabeasLula = 3;
        qteHabeasCiro = 3;
        qteHabeasBolso = 3;
        qteHabeasDilma = 3;
        qteHabeasSuplicy = 3;
        qteHabeasEneas = 3;

        qteMilitanciaLula = 3;
        qteMilitanciaCiro = 3;
        qteMilitanciaBolso = 3;
        qteMilitanciaDilma = 3;
        qteMilitanciaSuplicy = 3;
        qteMilitanciaEneas = 3;

        qteElogioLula = 1;
        qteElogioCiro = 1;
        qteElogioBolso = 1;
        qteElogioDilma = 1;
        qteElogioSuplicy = 1;
        qteElogioEneas = 1;

        qteDenunciaSupremoLula = 3;
        qteDenunciaSupremoCiro = 3;
        qteDenunciaSupremoBolso = 3;
        qteDenunciaSupremoDilma = 3;
        qteDenunciaSupremoSuplicy = 3;
        qteDenunciaSupremoEneas = 3;

        qteForoLula = 2;
        qteForoCiro = 2;
        qteForoBolso = 2;
        qteForoDilma = 2;
        qteForoSuplicy = 2;
        qteForoEneas = 2;

        qteVazarLula = 3;
        qteVazarCiro = 3;
        qteVazarBolso = 3;
        qteVazarDilma = 3;
        qteVazarSuplicy = 3;
        qteVazarEneas = 3;

        qteAdHominemLula = 3;
        qteAdHominemCiro = 3;
        qteAdHominemBolso = 3;
        qteAdHominemDilma = 3;
        qteAdHominemSuplicy = 3;
        qteAdHominemEneas = 3;

        qteApoioCentraoLula = 3;
        qteApoioCentraoCiro = 3;
        qteApoioCentraoBolso = 3;
        qteApoioCentraoDilma = 3;
        qteApoioCentraoSuplicy = 3;
        qteApoioCentraoEneas = 3;



    }



    // --------------- ATAQUES INIMIGO ------------------ //

    public void AtaqueInimigoPopulismo()
    {
        MitouLacrou();
        CalculoConfiancaInimigo();

        autoridadeAtaque = 40;
        danoInimigo = Mathf.Round(Mathf.Round(Mathf.Round(((2 * levelInimigo / 5 + 2) * autoridadeInimigo * autoridadeAtaque / apoioMidiaPlayer) / 50) + 2) * mitouLacrou) * confianca;
        Protegido();

        print("Esse é o dano inimigo " + danoInimigo);
        print("autoridade inimigo" + autoridadeInimigo);
        print("apoio da midia do player" + apoioMidiaPlayer);
        print("level inimigo" + levelInimigo);

        if (Mathf.Round(popularidadePlayer) <= 0)
        {
            popularidadePlayer = 0;
        }

        if (popularidadePlayer >= ataque)
        {


            print("Jogador perdeu " + danoInimigo + " de popularidade");
            somaPopPartido = Mathf.Round(somaPopPartido - danoInimigo);
            popularidadePlayer = Mathf.Round(popularidadePlayer) - danoInimigo;
            dialogo.text = "O oponente usou Populismo e tirou " + danoInimigo + " de sua popularidade";



            AtualizaPopPersonagens();

            popInimigo_txtUI.text = popularidadeInimigo.ToString();
            barraPopInimigo.value = popularidadeInimigo;

            pop_txtUI.text = Mathf.Round(popularidadePlayer).ToString();
            barraPop.value = popularidadePlayer;



            HabilitaBotoes();

            inimigoAtacou = true;

            print("atacou 1");


        }
        if (popularidadePlayer < ataque && inimigoAtacou == false)
        {

            danoInimigo = (int)Mathf.Round(popularidadePlayer);
            dialogo.text = "O oponente usou Populismo e tirou " + danoInimigo + " de sua popularidade";

            print("Jogador perdeu " + popularidadePlayer + " de hp");
            popularidadePlayer = Mathf.Round(popularidadePlayer) - danoInimigo;
            somaPopPartido = Mathf.Round(somaPopPartido - danoInimigo);


            AtualizaPopPersonagens();

            popInimigo_txtUI.text = popularidadeInimigo.ToString();
            barraPopInimigo.value = popularidadeInimigo;

            pop_txtUI.text = Mathf.Round(popularidadePlayer).ToString();
            barraPop.value = popularidadePlayer;



            HabilitaBotoes();

            inimigoAtacou = true;
            print("atacou 2");


        }



    } // FIM ATAQUE INIMIGO

    public void AtaquesInimigo()
    {
        AtaqueInimigoPopulismo();
    }


    // --------------------- //

    public void MitouLacrou()
    {
        chanceMitarLacrar = Random.Range(1, 10);

        if (chanceMitarLacrar == 10)
        {
            mitouLacrou = 1.5f;
        }

        if (chanceMitarLacrar != 16)
        {
            mitouLacrou = 1;
        }

        print("chance de mitarLacrar " + chanceMitarLacrar);
        print("mitouLacrou " + mitouLacrou);

        if (direita == true && chanceMitarLacrar == 10)
        {
            print("Muito opressor! Seu personagem mitou!");

        }
        if (esquerda == true && chanceMitarLacrar == 10)
        {
            print("Que tiro foi esse?! Seu personagem lacrou!");

        }

    }

    public void CalculoConfiancaPlayer()
    {
        calculoConfianca = Random.Range(0, confiancaPlayer);

        if (calculoConfianca == 0)
        {
            confianca = 0;
            print("Seu político errou o ataque porque não foi confiante");
          
        }

        if (calculoConfianca != 0)
        {
            confianca = 1;
            print("O ataque foi confiante");
        }
    }

    public void CalculoConfiancaInimigo()
    {
        calculoConfianca = Random.Range(0, confiancaInimigo);

        if (calculoConfianca == 0)
        {
            confianca = 0;
            print("oponente errou ataque");
            dialogo.text = "Oponente errou o ataque porque não foi confiante";

        }

        if (calculoConfianca != 0)
        {
            confianca = 1;
            print("oponente acertou ataque");
        }
    }

    public void DireitaEsquerda()
    {
        if (direita == true)
        {
            esquerda = false;
        }
        if (esquerda == true)
        {
            direita = false;
        }

        if (PlayerPrefs.GetInt("LulaDentroScene") == 1)
        {
            esquerda = true;
        }

        if (PlayerPrefs.GetInt("CiroDentroScene") == 1)
        {
            esquerda = true;
        }
        if (PlayerPrefs.GetInt("BolsoDentroScene") == 1)
        {
            direita = true;

        }
        if (PlayerPrefs.GetInt("DilmaDentroScene") == 1)
        {
            esquerda = true;
        }
        if (PlayerPrefs.GetInt("SuplicyDentroScene") == 1)
        {
            esquerda = true;
        }
        if (PlayerPrefs.GetInt("EneasDentroScene") == 1)
        {
            direita = true;
        }


    }

    public void CalculoRetorica()
    {
        if (retoricaPlayer >= retoricaInimigo)
        {
            currentState = BattleStates.ESCOLHAJOGADOR;
            print("retorica do player foi maior");
            //MovimentosPlayer.gameObject.SetActive(true);

        }

        if (retoricaPlayer < retoricaInimigo)
        {
            currentState = BattleStates.ESCOLHAINIMIGO;
            print("retorica do inimigo foi maior");
            MovimentosPlayer.gameObject.SetActive(false);


        }
    }

    public void VerificaQteAtaques()
    {
        if (qtePopulismo <= 0)
        {
            ataquePopulismo.interactable = false;
        }
        if (qtePopulismo > 0)
        {
            ataquePopulismo.interactable = true;

        }

        if (qteHabeasCorpus <= 0)
        {
            ataqueHabeasCorpus.interactable = false;
        }
        if (qteHabeasCorpus > 0)
        {
            ataqueHabeasCorpus.interactable = true;

        }

        if (qteMilitancia <= 0)
        {
            ataqueMilitancia.interactable = false;
        }
        if (qteMilitancia > 0)
        {
            ataqueMilitancia.interactable = true;

        }

        if (qteElogioJornal <= 0)
        {
            ataqueElogioJornal.interactable = false;
        }
        if (qteElogioJornal > 0)
        {
            ataqueElogioJornal.interactable = true;

        }

        if (qteDenunciaSupremo <= 0)
        {
            ataqueDenunciaSupremo.interactable = false;
        }
        if (qteDenunciaSupremo > 0)
        {
            ataqueDenunciaSupremo.interactable = true;

        }

        if (qteForoPrivilegiado <= 0)
        {
            ataqueForoPrivilegiado.interactable = false;
        }
        if (qteForoPrivilegiado > 0)
        {
            ataqueForoPrivilegiado.interactable = true;

        }

        if (qteVazarLigacoes <= 0)
        {
            ataqueVazarLigacoes.interactable = false;
        }
        if (qteVazarLigacoes > 0)
        {
            ataqueVazarLigacoes.interactable = true;

        }

        if (qteAdHominem <= 0)
        {
            ataqueAdHominem.interactable = false;
        }
        if (qteAdHominem > 0)
        {
            ataqueAdHominem.interactable = true;

        }

        if (qteApoioCentrao <= 0)
        {
            ataqueApoioCentrao.interactable = false;
        }
        if (qteApoioCentrao > 0)
        {
            ataqueApoioCentrao.interactable = true;

        }
    }

    public void Protegido()
    {
        if (playerProtegido == true && currentState == BattleStates.ESCOLHAINIMIGO)
        {
            danoInimigo = 0;
            playerProtegido = false;
        }

        if (inimigoProtegido == true && currentState == BattleStates.ESCOLHAJOGADOR)
        {
            danoPlayer = 0;
            inimigoProtegido = false;
        }
    }

    public void DialogoEscolha()
    {
        dialogo.text = "O que você irá fazer?";
    }

 
} // FIM DA CLASSE

