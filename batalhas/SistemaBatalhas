using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

public class SistemaBatalhas : MonoBehaviour
{
    public GameObject canvasBatalhas;
    public BattleStates currentState;
    public TipoBatalha tipoDessaBatalha;

    int ataque = 10;
    // public float popularidade;
    //public float popularidadePlayer;

    public float maxPopInimigo;
    public float popularidadeInimigo;

    bool playerAtacou, inimigoAtacou;
    public Text popInimigo_txtUI, pop_txtUI;
    public Slider barraPopInimigo, barraPop;
    public bool trocouPersonagem;

    public int quantosInimigos;

    public float somaPopPartido;


    public enum BattleStates
    {
        START,
        ESCOLHAJOGADOR,
        ESCOLHAINIMIGO,
        PERDEU,
        GANHOU
    }

    public enum TipoBatalha
    {
        ELEICAO,
        IMPEACHMENT,
        MILITANTES,
        LAVAJATO
    }



    private void Awake()
    {

        SomaPop();


    }



    // Use this for initialization
    void Start()
    {
        // PlayerPrefs.SetFloat("SomaPopPartido", 0);

        quantosInimigos = PlayerPrefs.GetInt("QuantosInimigos");
        PlayerPrefs.SetFloat("QuantosInimigos", quantosInimigos);

        popInimigo_txtUI.text = popularidadeInimigo.ToString();
        barraPopInimigo.value = popularidadeInimigo;
        barraPopInimigo.maxValue = PlayerPrefs.GetFloat("PopInimigos");

        popularidadeInimigo = PlayerPrefs.GetFloat("PopInimigos");
        PlayerPrefs.SetFloat("PopInimigos", popularidadeInimigo);


        FluxoBatalha();

     


        pop_txtUI.text = Mathf.Round(somaPopPartido).ToString();
        barraPop.value = somaPopPartido;
        barraPop.maxValue = somaPopPartido;

        currentState = BattleStates.START;

    }
    // Update is called once per frame
    void Update()
    {
        pop_txtUI.text = somaPopPartido.ToString();
        barraPop.value = somaPopPartido;


        FluxoBatalha();

    } // fim update

    public void FluxoBatalha()
    {
        popularidadeInimigo = PlayerPrefs.GetFloat("PopInimigos");
        PlayerPrefs.SetFloat("PopInimigos", popularidadeInimigo);
        PlayerPrefs.SetInt("QuantosInimigos", quantosInimigos);

        popInimigo_txtUI.text = popularidadeInimigo.ToString();
        barraPopInimigo.value = popularidadeInimigo;

        //popularidadePlayer = PlayerPrefs.GetFloat("PopularidaNaScene");
        //PlayerPrefs.SetFloat("PopularidadeNaScene", popularidadePlayer);

        pop_txtUI.text = Mathf.Round(somaPopPartido).ToString();
        barraPop.value = somaPopPartido;

        Debug.Log(currentState);



        switch (currentState)
        {
            case BattleStates.START:
                popularidadeInimigo = PlayerPrefs.GetFloat("PopInimigos");
              
                print(PlayerPrefs.GetFloat("PopInimigos"));

                currentState = BattleStates.ESCOLHAJOGADOR;
                break;

            case BattleStates.ESCOLHAJOGADOR:
                if (playerAtacou == true)
                {
                    VerificaHpPlayer();
                    playerAtacou = false;
                }
                if (trocouPersonagem == true)
                {
                    VerificaHpPlayer();
                    trocouPersonagem = false;
                }
                break;

            case BattleStates.ESCOLHAINIMIGO:

                AtaqueInimigo();
                if (inimigoAtacou == true)
                {
                    VerificaHpInimigo();
                    inimigoAtacou = false;
                }


                break;

            case BattleStates.PERDEU:
                print("você perdeu");
                PlayerPrefs.SetInt("NaBatalha", 0);

                break;

            case BattleStates.GANHOU:
                print("você ganhou");
                PlayerPrefs.SetInt("NaBatalha", 0);

                break;

        }
    }

    public void Inicia()
    {
        currentState = BattleStates.START;
    }

    public void AtaqueJogador()
    {



        print("inimigo perdeu 10 de hp");
        popularidadeInimigo = popularidadeInimigo - ataque;

        PlayerPrefs.SetFloat("PopInimigos", popularidadeInimigo);
        popularidadeInimigo = PlayerPrefs.GetFloat("PopInimigos"); //

        popInimigo_txtUI.text = popularidadeInimigo.ToString();
        barraPopInimigo.value = popularidadeInimigo;

        pop_txtUI.text = Mathf.Round(somaPopPartido).ToString();
        barraPop.value = somaPopPartido;

        playerAtacou = true;

        // popularidadePlayer = PlayerPrefs.GetFloat("PopularidaNaScene");


    }

    public void AtaqueInimigo()
    {


        print("Jogador perdeu 10 de hp");
        somaPopPartido = somaPopPartido - 5;
        inimigoAtacou = true;

        popInimigo_txtUI.text = popularidadeInimigo.ToString();
        barraPopInimigo.value = popularidadeInimigo;

        pop_txtUI.text = Mathf.Round(somaPopPartido).ToString();
        barraPop.value = somaPopPartido;
        // popularidadePlayer = PlayerPrefs.GetFloat("PopularidaNaScene");

    }



    void VerificaHpPlayer()
    {


        PlayerPrefs.SetFloat("PopInimigos", popularidadeInimigo); //




        if (somaPopPartido > 0 && popularidadeInimigo > 0)
        {

            currentState = BattleStates.ESCOLHAINIMIGO;
        }
        if (somaPopPartido <= 0)
        {

            currentState = BattleStates.PERDEU;

        }


        if (popularidadeInimigo <= 0 && PlayerPrefs.GetInt("PrimeiraVez") == 0)
        {
            quantosInimigos = PlayerPrefs.GetInt("QuantosInimigos") - 1;
            PlayerPrefs.SetInt("QuantosInimigos", quantosInimigos);
            // quantosInimigos = PlayerPrefs.GetInt("QuantosInimigos");
            print("trocou inimigo");

            if (quantosInimigos == 0)
            {

                currentState = BattleStates.GANHOU;

            }

        }
    }

    void VerificaHpInimigo()
    {



        if (somaPopPartido > 0 && popularidadeInimigo > 0)
        {

            currentState = BattleStates.ESCOLHAJOGADOR;



        }
        if (somaPopPartido <= 0)
        {

            currentState = BattleStates.PERDEU;

        }

        if (popularidadeInimigo <= 0 && PlayerPrefs.GetInt("PrimeiraVez") == 0)
        {
            quantosInimigos = PlayerPrefs.GetInt("QuantosInimigos") - 1;
            PlayerPrefs.SetInt("QuantosInimigos", quantosInimigos);
            // quantosInimigos = PlayerPrefs.GetInt("QuantosInimigos");
            print("trocou inimigo");
            barraPopInimigo.value = popularidadeInimigo;


            if (quantosInimigos == 0)
            {

                currentState = BattleStates.GANHOU;

            }


        }



    }



    public void TrocouDePersonagem()
    {
        trocouPersonagem = true;

       
    }

    public void SomaPop()
    {
        if (PlayerPrefs.GetInt("LulaDentroPartido") == 1)
        {
            somaPopPartido = somaPopPartido + PlayerPrefs.GetFloat("PopularidadeLula");
        }
     

        if (PlayerPrefs.GetInt("BolsoDentroPartido") == 1)
        {
            somaPopPartido = somaPopPartido + PlayerPrefs.GetFloat("PopularidadeBolso");
        }


        if (PlayerPrefs.GetInt("EneasDentroPartido") == 1)
        {
            somaPopPartido = somaPopPartido + PlayerPrefs.GetFloat("PopularidadeEneas");
        }
        print(Mathf.Round(somaPopPartido));

        pop_txtUI.text = Mathf.Round(somaPopPartido).ToString();
        barraPop.value = somaPopPartido;
        barraPop.maxValue = somaPopPartido;

      
    }  



} // FIM DA CLASSE
