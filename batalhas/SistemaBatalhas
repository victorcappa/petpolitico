using System.Collections;
using UnityEngine;
using UnityEngine.UI;
using UnityEngine.Experimental.Audio.Google;


public class SistemaBatalhas : MonoBehaviour
{
    public BattleStates currentState;
    public TipoBatalha tipoDessaBatalha;

    float ataque = 20;

    // STATUS
    // -------------------------------

    public float popularidadePlayer, danoPlayer, autoridadePlayer, apoioMidiaPlayer, retoricaPlayer;
    public int levelPlayer;
    public int confiancaPlayer;
    public int verba;
    public float autoridadeAtaque;

    public int levelInimigo;
    public Text levelInimigo_txt;
    public float popularidadeInimigo, danoInimigo, autoridadeInimigo, apoioMidiaInimigo, retoricaInimigo;
    public int confiancaInimigo;
    // -------------------------------

    bool playerAtacou, inimigoAtacou;
    public Text popInimigo_txtUI, pop_txtUI, verbatxt, levelPlayer_txt;
    public Slider barraPopInimigo, barraPop;
    public bool trocouPersonagem, trocouInimigo;

    public int quantosInimigos;

    public Button botao1, botao2;

    public float somaPopPartido;

    public GameObject painelPartido, fecharPainel, canvasBatalha, canvasGame;


    public float popLula, popCiro, popBolso, popDilma, popSuplicy, popEneas, popDodorio;
    public Button LulaPartido, CiroPartido, BolsoPartido, DilmaPartido, SuplicyPartido, EneasPartido, DodorioPartido;
    public GameObject LulaScene, DodorioScene;
    public GameObject MovimentosLula, MovimentosCiro, MovimentosBolso, MovimentosDilma, MovimentosSuplicy, MovimentosEneas, MovimentosDodorio;
    public GameObject MovimentosPlayer;
    public Text dialogo, infoAtaque, qte_Ataque, aut_Ataque;

    public int qteAtaqueInimigoElogio = 1;


    // ------- ALUGUEL DE ATAQUES ------ //



    // --------------- ATAQUES ------------------ //

    // QUANTIDADES DE CADA ATAQUE (divididos pra linha não ficar grande demais)

    public int qteFraudarUrnas, qteHabeasCorpus, qteMilitancia, qteElogioJornal, qteDenunciaSupremo, qteForoPrivilegiado;
    public int qteVazarLigacoes, qteAdHominem, qteApoioCentrao, qteDelacaoPremiada, qteFakeNews, qtePerguntaPolemica;

    //  PARA CADA PERSONAGEM
    public int qteFraudarUrnasLula, qteFraudarUrnasCiro, qteFraudarUrnasBolso, qteFraudarUrnasDilma, qteFraudarUrnasSuplicy, qteFraudarUrnasEneas, qteFraudarUrnasDodorio;
    public int qteHabeasLula, qteHabeasCiro, qteHabeasBolso, qteHabeasDilma, qteHabeasSuplicy, qteHabeasEneas, qteHabeasDodorio;
    public int qteMilitanciaLula, qteMilitanciaCiro, qteMilitanciaBolso, qteMilitanciaDilma, qteMilitanciaSuplicy, qteMilitanciaEneas, qteMilitanciaDodorio;
    public int qteElogioLula, qteElogioCiro, qteElogioBolso, qteElogioDilma, qteElogioSuplicy, qteElogioEneas, qteElogioDodorio;
    public int qteDenunciaSupremoLula, qteDenunciaSupremoCiro, qteDenunciaSupremoBolso, qteDenunciaSupremoDilma, qteDenunciaSupremoSuplicy, qteDenunciaSupremoEneas, qteDenunciaSupremoDodorio;
    public int qteForoLula, qteForoCiro, qteForoBolso, qteForoDilma, qteForoSuplicy, qteForoEneas, qteForoDodorio;
    public int qteVazarLula, qteVazarCiro, qteVazarBolso, qteVazarDilma, qteVazarSuplicy, qteVazarEneas, qteVazarDodorio;
    public int qteAdHominemLula, qteAdHominemCiro, qteAdHominemBolso, qteAdHominemDilma, qteAdHominemSuplicy, qteAdHominemEneas, qteAdHominemDodorio;
    public int qteApoioCentraoLula, qteApoioCentraoCiro, qteApoioCentraoBolso, qteApoioCentraoDilma, qteApoioCentraoSuplicy, qteApoioCentraoEneas, qteApoioCentraoDodorio;
    public int qteDelacaoLula, qteDelacaoCiro, qteDelacaoBolso, qteDelacaoDilma, qteDelacaoSuplicy, qteDelacaoEneas, qteDelacaoDodorio;
    public int qteFakeNewsLula, qteFakeNewsCiro, qteFakeNewsBolso, qteFakeNewsDilma, qteFakeNewsSuplicy, qteFakeNewsEneas, qteFakeNewsDodorio;
    public int qtePerguntaPolemicaLula, qtePerguntaPolemicaCiro, qtePerguntaPolemicaBolso, qtePerguntaPolemicaDilma, qtePerguntaPolemicaSuplicy, qtePerguntaPolemicaEneas, qtePerguntaPolemicaDodorio;

    // PARA INIMIGOS

    //public int qteFraudarUrnasInimigo, qteHabeasCorpusInimigo; qteMilitanciaInimigo, qteElogioJornalInimigo, qteDenunciaSupremoInimigo, qteFor

    // Bool para verificar se foi dado algum ataque de defesa 100%
    public bool playerProtegido, inimigoProtegido;


    // Botoes de ataque (desabilitam quando não tem mais a quantidade)

    public Button ataqueFraudarUrnas, ataqueHabeasCorpus, ataqueMilitancia, ataqueElogioJornal, ataqueDenunciaSupremo, ataqueFakeNews;
    public Button ataqueForoPrivilegiado, ataqueVazarLigacoes, ataqueAdHominem, ataqueApoioCentrao, ataqueDelacaoPremiada, ataquePerguntaPolemica;


    bool ataquePlayer, defesaPlayer, mudaStatusPlayer;

    int minAut, maxAut;
    // --------------- FIM ATAQUES ------------------ //

    public int chanceMitarLacrar, calculoConfianca, confianca;
    public float mitouLacrou;
    public bool direita, esquerda;



    public enum BattleStates
    {
        START,
        ESCOLHAJOGADOR,
        ESCOLHAINIMIGO,
        PERDEU,
        GANHOU
    }

    public enum TipoBatalha
    {
        ELEICAO,
        IMPEACHMENT,
        MILITANTES,
        LAVAJATO
    }



    public void Awake()
    {


        if (canvasBatalha.GetComponent<Canvas>().enabled == true)
        {
            SomaPartido();
        }

        HabilitaBotoes();
        PopPersonagens();
        pop_txtUI.text = Mathf.Round(popularidadePlayer).ToString();
        barraPop.value = popularidadePlayer;
        barraPop.maxValue = 100;


        StatusDeBatalha();
        StatusDeBatalhaInimigos();
        QuantidadeAtaques();
        ResetaQuantidadeAtaques();
        DireitaEsquerda();
    }



    public void Start()
    {
        HabilitaBotoes();
        QuantidadeAtaques();
        quantosInimigos = PlayerPrefs.GetInt("QuantosInimigos");
        PlayerPrefs.SetFloat("QuantosInimigos", quantosInimigos);

        popularidadeInimigo = PlayerPrefs.GetFloat("PopInimigos");
        PlayerPrefs.SetFloat("PopInimigos", popularidadeInimigo);
        popInimigo_txtUI.text = popularidadeInimigo.ToString();
        barraPopInimigo.value = popularidadeInimigo;
        barraPopInimigo.maxValue = 100;



        tipoDessaBatalha = TipoBatalha.ELEICAO;
        currentState = BattleStates.START;
        if (canvasBatalha.GetComponent<Canvas>().enabled == true)
        {
            FluxoBatalha();
        }




        popularidadePlayer = PlayerPrefs.GetFloat("PopularidadeNaScene");
        pop_txtUI.text = Mathf.Round(popularidadePlayer).ToString();
        barraPop.value = popularidadePlayer;
        barraPop.maxValue = 100;


        // currentState = BattleStates.START;

    } // FIM START


    void Update()
    {
        print(somaPopPartido);
        pop_txtUI.text = Mathf.Round(popularidadePlayer).ToString();
        barraPop.value = popularidadePlayer;


        VerificaQteAtaques();
        if (canvasBatalha.GetComponent<Canvas>().enabled == true)
        {
            FluxoBatalha();
        }

        verba = PlayerPrefs.GetInt("Verba");
        verbatxt.text = verba.ToString();

    } // FIM UPDATE

    public void FluxoBatalha()
    {
        PlayerPrefs.SetInt("NaBatalha", 1);

        popularidadeInimigo = PlayerPrefs.GetFloat("PopInimigos");
        PlayerPrefs.SetFloat("PopInimigos", popularidadeInimigo);
        quantosInimigos = PlayerPrefs.GetInt("QuantosInimigos");

        PlayerPrefs.SetInt("QuantosInimigos", quantosInimigos);


        popInimigo_txtUI.text = popularidadeInimigo.ToString();
        barraPopInimigo.value = popularidadeInimigo;

        pop_txtUI.text = Mathf.Round(popularidadePlayer).ToString();
        barraPop.value = popularidadePlayer;


        Debug.Log(currentState);

        levelPlayer_txt.text = "LVL : " + levelPlayer.ToString();
        levelInimigo_txt.text = "LVL : " + levelInimigo.ToString();


        switch (currentState)
        {

            case BattleStates.START:
                HabilitaBotoes();
                DialogoEscolha();
                popularidadeInimigo = PlayerPrefs.GetFloat("PopInimigos");

                print("Pop Inimigos" + PlayerPrefs.GetFloat("PopInimigos"));

                PopPersonagens();

                CalculoRetorica();

                break;

            case BattleStates.ESCOLHAJOGADOR:

                // dialogo.text = "O que você irá fazer?";
                MinMaxAut();
                print("VEZ PLAYER");

                if (playerAtacou == false)
                {
                    HabilitaBotoes();

                }

                if (playerAtacou == true)
                {
                    VerificaHpPlayer();
                    DireitaEsquerda();
                    inimigoAtacou = false;
                    MovimentosPlayer.gameObject.SetActive(false);

                    if (popularidadePlayer > 0 && popularidadeInimigo > 0)
                    {

                        StartCoroutine(VezInimigo());

                    }




                }
                if (trocouPersonagem == true)
                {

                    VerificaHpPlayer();
                    trocouPersonagem = false;
                    CalculoRetorica();
                }
                break;

            case BattleStates.ESCOLHAINIMIGO:

                if (inimigoAtacou == false)
                {
                    AtaquesInimigo();
                    DesabilitaBotoes();
                }

                if (inimigoAtacou == true)
                {
                    playerAtacou = false;
                    VerificaHpInimigo();
                    DireitaEsquerda();
                    print("INIMIGO ATACOU");

                    if (popularidadePlayer > 0 && popularidadeInimigo > 0)
                    {
                        StartCoroutine(VezPlayer());

                    }


                }
                if (trocouInimigo == true)
                {
                    VerificaHpInimigo();
                    trocouInimigo = false;
                    StatusDeBatalhaInimigos();
                    CalculoRetorica();
                }


                break;

            case BattleStates.PERDEU:
                print("você perdeu");
                PlayerPrefs.SetInt("NaBatalha", 0);
                DesabilitaBotoes();
                ResetaSomaPop();
                break;

            case BattleStates.GANHOU:
                print("você ganhou");
                PlayerPrefs.SetInt("NaBatalha", 0);
                DesabilitaBotoes();
                ResetaSomaPop();

                break;

        }
    }

    public void Inicia()
    {
        currentState = BattleStates.START;
    }




    public void VerificaHpPlayer()
    {

        if (popularidadePlayer < 0)
        {
            popularidadePlayer = 0;
        }

        PlayerPrefs.SetFloat("PopInimigos", popularidadeInimigo);

        levelPlayer_txt.text = "LVL : " + levelPlayer.ToString();
        StatusDeBatalha();



        if (popularidadePlayer <= 0)
        {
            // abre painel para trocar de personagem
            painelPartido.gameObject.SetActive(true);
            fecharPainel.gameObject.SetActive(true);

            if (Mathf.Round(somaPopPartido) <= 0)
            {
                currentState = BattleStates.PERDEU;


                // StartCoroutine(TiraTodosDaScene());

            }



        }


        if (popularidadeInimigo <= 0 && PlayerPrefs.GetInt("PrimeiraVez") == 0)
        {
            quantosInimigos = PlayerPrefs.GetInt("QuantosInimigos") - 1;
            PlayerPrefs.SetInt("QuantosInimigos", quantosInimigos);
            print("trocou inimigo");

            trocouInimigo = true;
            print("quanto enemy " + PlayerPrefs.GetInt("QuantosInimigos"));
            HabilitaBotoes();

            if (quantosInimigos == 0)
            {

                currentState = BattleStates.GANHOU;

                //  StartCoroutine(TiraTodosDaScene());

            }

        }
    }

    public void VerificaHpInimigo()
    {


        AtualizaPopPersonagens();


        if (popularidadePlayer > 0 && popularidadeInimigo > 0)
        {

            StartCoroutine(VezPlayer());



        }
        if (popularidadePlayer <= 0)
        {
            // abre painel para trocar de personagem
            currentState = BattleStates.ESCOLHAJOGADOR;

            painelPartido.gameObject.SetActive(true);
            fecharPainel.gameObject.SetActive(true);
            popularidadePlayer = 0;

            if (Mathf.Round(somaPopPartido) <= 0)
            {
                currentState = BattleStates.PERDEU;

                // StartCoroutine(TiraTodosDaScene());



            }

        }

        if (popularidadeInimigo <= 0 && PlayerPrefs.GetInt("PrimeiraVez") == 0)
        {
            quantosInimigos = PlayerPrefs.GetInt("QuantosInimigos") - 1;
            PlayerPrefs.SetInt("QuantosInimigos", quantosInimigos);
            print("trocou inimigo");
            barraPopInimigo.value = popularidadeInimigo;
            levelInimigo_txt.text = "LVL : " + levelInimigo.ToString();

            print("quanto enemy " + PlayerPrefs.GetInt("QuantosInimigos"));

            StatusDeBatalhaInimigos();
            trocouInimigo = true;
            HabilitaBotoes();

            if (quantosInimigos == 0)
            {
                currentState = BattleStates.GANHOU;

                // StartCoroutine(TiraTodosDaScene());
            }


        }


    }



    public void TrocouDePersonagem()
    {
        trocouPersonagem = true;
        StatusDeBatalha();
        PopPersonagens();

        pop_txtUI.text = Mathf.Round(popularidadePlayer).ToString();
        barraPop.value = Mathf.Round(popularidadePlayer);
        levelPlayer_txt.text = "LVL : " + levelPlayer.ToString();
        StatusDeBatalha();
        barraPop.maxValue = 100;
        painelPartido.gameObject.SetActive(false);
        fecharPainel.gameObject.SetActive(false);

        QuantidadeAtaques();

        DesabilitaBotoes();


    }

    IEnumerator VezInimigo()
    {

        yield return new WaitForSeconds(4f);

        currentState = BattleStates.ESCOLHAINIMIGO;


    }

    IEnumerator VezPlayer()
    {

        yield return new WaitForSeconds(4f);

        currentState = BattleStates.ESCOLHAJOGADOR;


    }


    public void TiraDaScene()
    {
        if (PlayerPrefs.GetInt("LulaDentroScene") == 1)
        {
            LulaScene.gameObject.SetActive(false);
        }

        if (PlayerPrefs.GetInt("CiroDentroScene") == 1)
        {
        }
        if (PlayerPrefs.GetInt("BolsoDentroScene") == 1)
        {

        }
        if (PlayerPrefs.GetInt("DilmaDentroScene") == 1)
        {
        }
        if (PlayerPrefs.GetInt("SuplicyDentroScene") == 1)
        {
        }
        if (PlayerPrefs.GetInt("EneasDentroScene") == 1)
        {
        }

        if (PlayerPrefs.GetInt("DodorioDentroScene") == 1)
        {
            DodorioScene.gameObject.SetActive(false);

        }
    }
    public void DesabilitaBotoes()
    {
        botao1.interactable = false;
        botao2.interactable = false;
    }
    public void HabilitaBotoes()
    {
        botao1.interactable = true;
        botao2.interactable = true;
    }


    //PARA VERIFICAR SE ACABOU A POPULARIDADE DE TODOS DENTRO DO PARTIDO
    public void SomaPartido()
    {
        // quantosPartido = meuPartido.Count;


        if (PlayerPrefs.GetInt("LulaDentroPartido") == 1)
        {
            somaPopPartido = Mathf.Round(Mathf.Round(somaPopPartido + Mathf.Round(PlayerPrefs.GetFloat("PopularidadeLula"))));

        }

        if (PlayerPrefs.GetInt("CiroDentroPartido") == 1)
        {
            somaPopPartido = Mathf.Round(Mathf.Round(somaPopPartido + Mathf.Round(PlayerPrefs.GetFloat("PopularidadeCiro"))));

        }
        if (PlayerPrefs.GetInt("BolsoDentroPartido") == 1)
        {
            somaPopPartido = Mathf.Round(Mathf.Round(somaPopPartido + Mathf.Round(PlayerPrefs.GetFloat("PopularidadeBolso"))));
        }
        if (PlayerPrefs.GetInt("DilmaDentroPartido") == 1)
        {
            somaPopPartido = Mathf.Round(Mathf.Round(somaPopPartido + Mathf.Round(PlayerPrefs.GetFloat("PopularidadeDilma"))));

        }
        if (PlayerPrefs.GetInt("SuplicyDentroPartido") == 1)
        {
            somaPopPartido = Mathf.Round(Mathf.Round(somaPopPartido + Mathf.Round(PlayerPrefs.GetFloat("PopularidadeSuplicy"))));

        }
        if (PlayerPrefs.GetInt("EneasDentroPartido") == 1)
        {
            somaPopPartido = Mathf.Round(Mathf.Round(somaPopPartido + Mathf.Round(PlayerPrefs.GetFloat("PopularidadeEneas"))));

        }
        if (PlayerPrefs.GetInt("DodorioDentroPartido") == 1)
        {
            somaPopPartido = Mathf.Round(Mathf.Round(somaPopPartido + Mathf.Round(PlayerPrefs.GetFloat("PopularidadeDodorio"))));

        }
        print(somaPopPartido);
    }

    public void PopPersonagens()
    {
        if (PlayerPrefs.GetInt("LulaDentroScene") == 1)
        {
            popularidadePlayer = Mathf.Round(PlayerPrefs.GetFloat("PopularidadeLula"));

        }

        if (PlayerPrefs.GetInt("CiroDentroScene") == 1)
        {
            popularidadePlayer = Mathf.Round(PlayerPrefs.GetFloat("PopularidadeCiro"));
        }
        if (PlayerPrefs.GetInt("BolsoDentroScene") == 1)
        {
            popularidadePlayer = Mathf.Round(PlayerPrefs.GetFloat("PopularidadeBolso"));

        }
        if (PlayerPrefs.GetInt("DilmaDentroScene") == 1)
        {
            popularidadePlayer = Mathf.Round(PlayerPrefs.GetFloat("PopularidadeDilma"));
        }
        if (PlayerPrefs.GetInt("SuplicyDentroScene") == 1)
        {
            popularidadePlayer = Mathf.Round(PlayerPrefs.GetFloat("PopularidadeSuplicy"));
        }
        if (PlayerPrefs.GetInt("EneasDentroScene") == 1)
        {
            popularidadePlayer = Mathf.Round(PlayerPrefs.GetFloat("PopularidadeEneas"));
        }
        if (PlayerPrefs.GetInt("DodorioDentroScene") == 1)
        {
            popularidadePlayer = Mathf.Round(PlayerPrefs.GetFloat("PopularidadeDodorio"));
        }
    }

    public void PopPersonagensInicial()
    {
        if (PlayerPrefs.GetInt("LulaDentroPartido") == 1)
        {
            PlayerPrefs.SetFloat("PopularidadeLula", 100);
            popularidadePlayer = 100;
        }

        if (PlayerPrefs.GetInt("CiroDentroPartido") == 1)
        {
            PlayerPrefs.SetFloat("PopularidadeCiro", 100);
            popularidadePlayer = 100;

        }
        if (PlayerPrefs.GetInt("BolsoDentroPartido") == 1)
        {
            PlayerPrefs.SetFloat("PopularidadeBolso", 100);
            popularidadePlayer = 100;

        }
        if (PlayerPrefs.GetInt("DilmaDentroPartido") == 1)
        {
            PlayerPrefs.SetFloat("PopularidadeDilma", 100);
            popularidadePlayer = 100;

        }
        if (PlayerPrefs.GetInt("SuplicyDentroPartido") == 1)
        {
            PlayerPrefs.SetFloat("PopularidadeSuplicy", 100);
            popularidadePlayer = 100;

        }
        if (PlayerPrefs.GetInt("EneasDentroPartido") == 1)
        {
            PlayerPrefs.SetFloat("PopularidadeEneas", 100);
            popularidadePlayer = 100;

        }

        if (PlayerPrefs.GetInt("DodorioDentroPartido") == 1)
        {
            PlayerPrefs.SetFloat("PopularidadeDodorio", 100);
            popularidadePlayer = 100;

        }
    }

    public void ResetaSomaPop()
    {
        somaPopPartido = 0;

    }

    public void AtualizaPopPersonagens()
    {
        if (PlayerPrefs.GetInt("LulaDentroScene") == 1)
        {
            PlayerPrefs.SetFloat("PopularidadeLula", Mathf.Round(popularidadePlayer));
            if (PlayerPrefs.GetFloat("PopularidadeLula") <= 0)
            {
                LulaPartido.interactable = false;
            }
        }

        if (PlayerPrefs.GetInt("CiroDentroScene") == 1)
        {
            PlayerPrefs.SetFloat("PopularidadeCiro", Mathf.Round(popularidadePlayer));
            if (PlayerPrefs.GetFloat("PopularidadeCiro") <= 0)
            {
                CiroPartido.interactable = false;
            }
        }
        if (PlayerPrefs.GetInt("BolsoDentroScene") == 1)
        {
            PlayerPrefs.SetFloat("PopularidadeBolso", Mathf.Round(popularidadePlayer));
            if (PlayerPrefs.GetFloat("PopularidadeBolso") <= 0)
            {
                BolsoPartido.interactable = false;
            }
        }
        if (PlayerPrefs.GetInt("DilmaDentroScene") == 1)
        {
            PlayerPrefs.SetFloat("PopularidadeDilma", Mathf.Round(popularidadePlayer));
            if (PlayerPrefs.GetFloat("PopularidadeDilma") <= 0)
            {
                DilmaPartido.interactable = false;
            }
        }
        if (PlayerPrefs.GetInt("SuplicyDentroScene") == 1)
        {
            PlayerPrefs.SetFloat("PopularidadeSuplicy", Mathf.Round(popularidadePlayer));
            if (PlayerPrefs.GetFloat("PopularidadeSuplicy") <= 0)
            {
                SuplicyPartido.interactable = false;
            }
        }
        if (PlayerPrefs.GetInt("EneasDentroScene") == 1)
        {
            PlayerPrefs.SetFloat("PopularidadeEneas", Mathf.Round(popularidadePlayer));
            if (PlayerPrefs.GetFloat("PopularidadeEneas") <= 0)
            {
                EneasPartido.interactable = false;
            }
        }

        if (PlayerPrefs.GetInt("DodorioDentroScene") == 1)
        {
            PlayerPrefs.SetFloat("PopularidadeDodorio", Mathf.Round(popularidadePlayer));
            if (PlayerPrefs.GetFloat("PopularidadeDodorio") <= 0)
            {
                DodorioPartido.interactable = false;
            }
        }
    }

    public void PainelMovimentos()
    {
        if (PlayerPrefs.GetInt("LulaDentroScene") == 1)
        {
            MovimentosLula.gameObject.SetActive(true);

            MovimentosCiro.gameObject.SetActive(false);
            MovimentosBolso.gameObject.SetActive(false);
            MovimentosDilma.gameObject.SetActive(false);
            MovimentosSuplicy.gameObject.SetActive(false);
            MovimentosEneas.gameObject.SetActive(false);
            MovimentosDodorio.gameObject.SetActive(false);


        }

        if (PlayerPrefs.GetInt("CiroDentroScene") == 1)
        {
            MovimentosCiro.gameObject.SetActive(true);

            MovimentosLula.gameObject.SetActive(false);
            MovimentosBolso.gameObject.SetActive(false);
            MovimentosDilma.gameObject.SetActive(false);
            MovimentosSuplicy.gameObject.SetActive(false);
            MovimentosEneas.gameObject.SetActive(false);
            MovimentosDodorio.gameObject.SetActive(false);

        }

        if (PlayerPrefs.GetInt("BolsoDentroScene") == 1)
        {
            MovimentosBolso.gameObject.SetActive(true);

            MovimentosCiro.gameObject.SetActive(false);
            MovimentosLula.gameObject.SetActive(false);
            MovimentosDilma.gameObject.SetActive(false);
            MovimentosSuplicy.gameObject.SetActive(false);
            MovimentosEneas.gameObject.SetActive(false);
            MovimentosDodorio.gameObject.SetActive(false);

        }

        if (PlayerPrefs.GetInt("DilmaDentroScene") == 1)
        {
            MovimentosDilma.gameObject.SetActive(true);

            MovimentosCiro.gameObject.SetActive(false);
            MovimentosBolso.gameObject.SetActive(false);
            MovimentosLula.gameObject.SetActive(false);
            MovimentosSuplicy.gameObject.SetActive(false);
            MovimentosEneas.gameObject.SetActive(false);
            MovimentosDodorio.gameObject.SetActive(false);

        }

        if (PlayerPrefs.GetInt("SuplicyDentroScene") == 1)
        {
            MovimentosSuplicy.gameObject.SetActive(true);

            MovimentosCiro.gameObject.SetActive(false);
            MovimentosBolso.gameObject.SetActive(false);
            MovimentosDilma.gameObject.SetActive(false);
            MovimentosLula.gameObject.SetActive(false);
            MovimentosEneas.gameObject.SetActive(false);
            MovimentosDodorio.gameObject.SetActive(false);

        }

        if (PlayerPrefs.GetInt("EneasDentroScene") == 1)
        {
            MovimentosEneas.gameObject.SetActive(true);

            MovimentosCiro.gameObject.SetActive(false);
            MovimentosBolso.gameObject.SetActive(false);
            MovimentosDilma.gameObject.SetActive(false);
            MovimentosSuplicy.gameObject.SetActive(false);
            MovimentosLula.gameObject.SetActive(false);
            MovimentosDodorio.gameObject.SetActive(false);

        }

        if (PlayerPrefs.GetInt("DodorioDentroScene") == 1)
        {
            MovimentosDodorio.gameObject.SetActive(true);

            MovimentosCiro.gameObject.SetActive(false);
            MovimentosBolso.gameObject.SetActive(false);
            MovimentosDilma.gameObject.SetActive(false);
            MovimentosSuplicy.gameObject.SetActive(false);
            MovimentosLula.gameObject.SetActive(false);
            MovimentosEneas.gameObject.SetActive(false);

        }
    }


    public void StatusDeBatalha()
    {
        if (PlayerPrefs.GetInt("LulaDentroScene") == 1)
        {
            autoridadePlayer = PlayerPrefs.GetFloat("AutoridadeLula");
            levelPlayer = PlayerPrefs.GetInt("LevelLula");
            apoioMidiaPlayer = PlayerPrefs.GetFloat("ApoioMidiaLula");
            confiancaPlayer = PlayerPrefs.GetInt("ConfiancaLula");
            retoricaPlayer = PlayerPrefs.GetFloat("RetoricaLula");
            LulaScene.gameObject.SetActive(true);

        }
        if (PlayerPrefs.GetInt("CiroDentroScene") == 1)
        {
            autoridadePlayer = PlayerPrefs.GetFloat("AutoridadeCiro");
            levelPlayer = PlayerPrefs.GetInt("LevelCiro");
            apoioMidiaPlayer = PlayerPrefs.GetFloat("ApoioMidiaCiro");
            confiancaPlayer = PlayerPrefs.GetInt("ConfiancaCiro");
            retoricaPlayer = PlayerPrefs.GetFloat("RetoricaCiro");

        }
        if (PlayerPrefs.GetInt("BolsoDentroScene") == 1)
        {
            autoridadePlayer = PlayerPrefs.GetFloat("AutoridadeBolso");
            levelPlayer = PlayerPrefs.GetInt("LevelBolso");
            apoioMidiaPlayer = PlayerPrefs.GetFloat("ApoioMidiaBolso");
            confiancaPlayer = PlayerPrefs.GetInt("ConfiancaBolso");
            retoricaPlayer = PlayerPrefs.GetFloat("RetoricaBolso");

        }
        if (PlayerPrefs.GetInt("DilmaDentroScene") == 1)
        {
            autoridadePlayer = PlayerPrefs.GetFloat("AutoridadeDilma");
            levelPlayer = PlayerPrefs.GetInt("LevelDilma");
            apoioMidiaPlayer = PlayerPrefs.GetFloat("ApoioMidiaDilma");
            confiancaPlayer = PlayerPrefs.GetInt("ConfiancaDilma");
            retoricaPlayer = PlayerPrefs.GetFloat("RetoricaDilma");

        }
        if (PlayerPrefs.GetInt("SuplicyDentroScene") == 1)
        {
            autoridadePlayer = PlayerPrefs.GetFloat("AutoridadeSuplicy");
            levelPlayer = PlayerPrefs.GetInt("LevelSuplicy");
            apoioMidiaPlayer = PlayerPrefs.GetFloat("ApoioMidiaSuplicy");
            confiancaPlayer = PlayerPrefs.GetInt("ConfiancaSuplicy");
            retoricaPlayer = PlayerPrefs.GetFloat("RetoricaSuplicy");

        }
        if (PlayerPrefs.GetInt("EneasDentroScene") == 1)
        {
            autoridadePlayer = PlayerPrefs.GetFloat("AutoridadeEneas");
            levelPlayer = PlayerPrefs.GetInt("LevelEneas");
            apoioMidiaPlayer = PlayerPrefs.GetFloat("ApoioMidiaEneas");
            confiancaPlayer = PlayerPrefs.GetInt("ConfiancaEneas");
            retoricaPlayer = PlayerPrefs.GetFloat("RetoricaEneas");

        }
        if (PlayerPrefs.GetInt("DodorioDentroScene") == 1)
        {
            autoridadePlayer = PlayerPrefs.GetFloat("AutoridadeDodorio");
            levelPlayer = PlayerPrefs.GetInt("LevelDodorio");
            apoioMidiaPlayer = PlayerPrefs.GetFloat("ApoioMidiaDodorio");
            confiancaPlayer = PlayerPrefs.GetInt("ConfiancaDodorio");
            retoricaPlayer = PlayerPrefs.GetFloat("RetoricaDodorio");
            DodorioScene.gameObject.SetActive(true);

        }
    }

    public void StatusDeBatalhaInimigos()
    {
        if (PlayerPrefs.GetInt("LulaInimigoScene") == 1)
        {
            autoridadeInimigo = PlayerPrefs.GetFloat("AutoridadeLulaInimigo");
            levelInimigo = PlayerPrefs.GetInt("LevelLulaInimigo");
            apoioMidiaInimigo = PlayerPrefs.GetFloat("ApoioMidiaLulaInimigo");
            retoricaInimigo = PlayerPrefs.GetFloat("RetoricaLulaInimigo");
            confiancaInimigo = PlayerPrefs.GetInt("ConfiancaLulaInimigo");


        }

        if (PlayerPrefs.GetInt("CiroInimigoScene") == 1)
        {
            autoridadeInimigo = PlayerPrefs.GetFloat("AutoridadeCiroInimigo");
            levelInimigo = PlayerPrefs.GetInt("LevelCiroInimigo");
            apoioMidiaInimigo = PlayerPrefs.GetFloat("ApoioMidiaCiroInimigo");
            retoricaInimigo = PlayerPrefs.GetFloat("RetoricaCiroInimigo");
            confiancaInimigo = PlayerPrefs.GetInt("ConfiancaCiroInimigo");
        }
        if (PlayerPrefs.GetInt("BolsoInimigoScene") == 1)
        {
            autoridadeInimigo = PlayerPrefs.GetFloat("AutoridadeBolsoInimigo");
            levelInimigo = PlayerPrefs.GetInt("LevelBolsoInimigo");
            apoioMidiaInimigo = PlayerPrefs.GetFloat("ApoioMidiaBolsoInimigo");
            retoricaInimigo = PlayerPrefs.GetFloat("RetoricaBolsoInimigo");
            confiancaInimigo = PlayerPrefs.GetInt("ConfiancaBolsoInimigo");

        }
        if (PlayerPrefs.GetInt("DilmaInimigoScene") == 1)
        {
            autoridadeInimigo = PlayerPrefs.GetFloat("AutoridadeDilmaInimigo");
            levelInimigo = PlayerPrefs.GetInt("LevelDilmaInimigo");
            apoioMidiaInimigo = PlayerPrefs.GetFloat("ApoioMidiaDilmaInimigo");
            retoricaInimigo = PlayerPrefs.GetFloat("RetoricaDilmaInimigo");
            confiancaInimigo = PlayerPrefs.GetInt("ConfiancaDilmaInimigo");
        }
        if (PlayerPrefs.GetInt("SuplicyInimigoScene") == 1)
        {
            autoridadeInimigo = PlayerPrefs.GetFloat("AutoridadeSuplicyInimigo");
            levelInimigo = PlayerPrefs.GetInt("LevelSuplicyInimigo");
            apoioMidiaInimigo = PlayerPrefs.GetFloat("ApoioMidiaSuplicyInimigo");
            retoricaInimigo = PlayerPrefs.GetFloat("RetoricaSuplicyInimigo");
            confiancaInimigo = PlayerPrefs.GetInt("ConfiancaSuplicyInimigo");
        }
        if (PlayerPrefs.GetInt("EneasInimigoScene") == 1)
        {
            autoridadeInimigo = PlayerPrefs.GetFloat("AutoridadeEneasInimigo");
            levelInimigo = PlayerPrefs.GetInt("LevelEneasInimigo");
            apoioMidiaInimigo = PlayerPrefs.GetFloat("ApoioMidiaEneasInimigo");
            retoricaInimigo = PlayerPrefs.GetFloat("RetoricaEneasInimigo");
            confiancaInimigo = PlayerPrefs.GetInt("ConfiancaEneasInimigo");
        }

        if (PlayerPrefs.GetInt("DodorioInimigoScene") == 1)
        {
            autoridadeInimigo = PlayerPrefs.GetFloat("AutoridadeDodorioInimigo");
            levelInimigo = PlayerPrefs.GetInt("LevelDodorioInimigo");
            apoioMidiaInimigo = PlayerPrefs.GetFloat("ApoioMidiaDodorioInimigo");
            retoricaInimigo = PlayerPrefs.GetFloat("RetoricaDodorioInimigo");
            confiancaInimigo = PlayerPrefs.GetInt("ConfiancaDodorioInimigo");
        }
    }



    // --------------- ATAQUES PLAYER ------------------ //


    // TIRA POPULARIDADE

    // Fraudar Urnas(autoridade 30-40)

    public void AtaqueFraudarUrnas()
    {
        ataquePlayer = true;
        defesaPlayer = false;
        mudaStatusPlayer = false;

        MitouLacrou();
        Protegido();
        CalculoConfiancaPlayer();
        autoridadeAtaque = Random.Range(30, 40);
        danoPlayer = Mathf.Round(Mathf.Round(Mathf.Round(((2 * levelPlayer / 5 + 2) * autoridadePlayer * autoridadeAtaque / apoioMidiaInimigo) / 50) + 2) * mitouLacrou) * confianca;

        if (qteFraudarUrnas <= 0)
        {
            ataqueFraudarUrnas.interactable = false;
        }
        if (qteFraudarUrnas > 0)
        {
            ataqueFraudarUrnas.interactable = true;

        }


        if (qteFraudarUrnas > 0)
        {
            print("ATAQUE COM DANO" + danoPlayer);

            popularidadeInimigo = popularidadeInimigo - danoPlayer;

            if (popularidadeInimigo <= 0)
            {
                popularidadeInimigo = 0;
            }

            qteFraudarUrnas = qteFraudarUrnas - 1;
            AtualizaQuantidadeAtaques();

            if (confianca == 0)
            {
                dialogo.text = "Seu político errou o ataque porque não foi confiante";



            }
            if (confianca != 0)
            {
                dialogo.text = "Você usou Fraudar Urnas e tirou " + danoPlayer + " de popularidade do oponente";

                if (direita == true && chanceMitarLacrar == 10)
                {
                    dialogo.text = ("Muito opressor! Seu personagem MITOU e tirou " + danoPlayer + "  de popularidade do seu oponente");

                }
                if (esquerda == true && chanceMitarLacrar == 10)
                {
                    dialogo.text = ("Que tiro foi esse?! Seu personagem LACROU e tirou " + danoPlayer + "  de popularidade do seu oponente");

                }

            }



        }



        PlayerPrefs.SetFloat("PopInimigos", popularidadeInimigo);
        popularidadeInimigo = PlayerPrefs.GetFloat("PopInimigos"); //

        popInimigo_txtUI.text = popularidadeInimigo.ToString();
        barraPopInimigo.value = popularidadeInimigo;

        pop_txtUI.text = Mathf.Round(popularidadePlayer).ToString();
        barraPop.value = popularidadePlayer;


        DesabilitaBotoes();


        playerAtacou = true;
    }

    public void SelecionaFraudarUrnas()
    {
        QuantidadeAtaques();

        infoAtaque.text = "Diminui popularidade do oponente";
        qte_Ataque.text = "Qte.: " + qteFraudarUrnas + "/5";
        dialogo.text = "Utilizar o ataque Fraudar Urnas?";
        aut_Ataque.text = "Autoridade: 30 - 40";

    }

    // Fake News (autoridade 50-60)

    public void AtaqueFakeNews()
    {
        ataquePlayer = true;
        defesaPlayer = false;
        mudaStatusPlayer = false;

        autoridadeAtaque = Random.Range(50, 60);

        MitouLacrou();
        Protegido();
        CalculoConfiancaPlayer();

        danoPlayer = Mathf.Round(Mathf.Round(Mathf.Round(((2 * levelPlayer / 5 + 2) * autoridadePlayer * autoridadeAtaque / apoioMidiaInimigo) / 50) + 2) * mitouLacrou) * confianca;

        if (qteFakeNews <= 0)
        {
            ataqueFakeNews.interactable = false;
        }
        if (qteFakeNews > 0)
        {
            ataqueFakeNews.interactable = true;

        }


        if (qteFakeNews > 0)
        {

            popularidadeInimigo = popularidadeInimigo - danoPlayer;
            if (popularidadeInimigo <= 0)
            {
                popularidadeInimigo = 0;
            }
            qteFakeNews = qteFakeNews - 1;
            AtualizaQuantidadeAtaques();

            if (confianca == 0)
            {
                dialogo.text = "Seu político errou o ataque porque não foi confiante";



            }
            if (confianca != 0)
            {
                dialogo.text = "Você usou Fake News e tirou " + danoPlayer + " de popularidade do oponente";

                if (direita == true && chanceMitarLacrar == 10)
                {
                    dialogo.text = ("Muito opressor! Seu personagem MITOU e tirou " + danoPlayer + "  de popularidade do seu oponente");

                }
                if (esquerda == true && chanceMitarLacrar == 10)
                {
                    dialogo.text = ("Que tiro foi esse?! Seu personagem LACROU e tirou " + danoPlayer + "  de popularidade do seu oponente");

                }

            }



        }


        PlayerPrefs.SetFloat("PopInimigos", popularidadeInimigo);
        popularidadeInimigo = PlayerPrefs.GetFloat("PopInimigos");

        popInimigo_txtUI.text = popularidadeInimigo.ToString();
        barraPopInimigo.value = popularidadeInimigo;

        pop_txtUI.text = Mathf.Round(popularidadePlayer).ToString();
        barraPop.value = popularidadePlayer;


        DesabilitaBotoes();


        playerAtacou = true;

    } // FIM ATAQUE FAKE NEWS

    public void SelecionaFakeNews()
    {
        QuantidadeAtaques();

        infoAtaque.text = "Diminui popularidade do oponente";
        qte_Ataque.text = "Qte.: " + qteFakeNews + "/3";
        dialogo.text = "Utilizar o ataque Fake News?";
        aut_Ataque.text = "Autoridade: 50 - 60";

    }

    // Pergunta Polemica (autoridade 40-50)
    public void AtaquePerguntaPolemica()
    {
        ataquePlayer = true;
        defesaPlayer = false;
        mudaStatusPlayer = false;

        autoridadeAtaque = Random.Range(40, 50);

        MitouLacrou();
        Protegido();
        CalculoConfiancaPlayer();

        danoPlayer = Mathf.Round(Mathf.Round(Mathf.Round(((2 * levelPlayer / 5 + 2) * autoridadePlayer * autoridadeAtaque / apoioMidiaInimigo) / 50) + 2) * mitouLacrou) * confianca;

        if (qtePerguntaPolemica <= 0)
        {
            ataquePerguntaPolemica.interactable = false;
        }
        if (qtePerguntaPolemica > 0)
        {
            ataquePerguntaPolemica.interactable = true;

        }


        if (qtePerguntaPolemica > 0)
        {

            popularidadeInimigo = popularidadeInimigo - danoPlayer;
            qtePerguntaPolemica = qtePerguntaPolemica - 1;
            AtualizaQuantidadeAtaques();

            if (popularidadeInimigo <= 0)
            {
                popularidadeInimigo = 0;
            }

            if (confianca == 0)
            {
                dialogo.text = "Seu político errou o ataque porque não foi confiante";



            }
            if (confianca != 0)
            {
                dialogo.text = "Você usou Pergunta Polemica e tirou " + danoPlayer + " de popularidade do oponente";

                if (direita == true && chanceMitarLacrar == 10)
                {
                    dialogo.text = ("Muito opressor! Seu personagem MITOU e tirou " + danoPlayer + "  de popularidade do seu oponente");

                }
                if (esquerda == true && chanceMitarLacrar == 10)
                {
                    dialogo.text = ("Que tiro foi esse?! Seu personagem LACROU e tirou " + danoPlayer + "  de popularidade do seu oponente");

                }

            }



        }



        PlayerPrefs.SetFloat("PopInimigos", popularidadeInimigo);
        popularidadeInimigo = PlayerPrefs.GetFloat("PopInimigos");

        popInimigo_txtUI.text = popularidadeInimigo.ToString();
        barraPopInimigo.value = popularidadeInimigo;

        pop_txtUI.text = Mathf.Round(popularidadePlayer).ToString();
        barraPop.value = popularidadePlayer;


        DesabilitaBotoes();


        playerAtacou = true;

    } // FIM ATAQUE FAKE NEWS

    public void SelecionaPerguntaPolemica()
    {
        QuantidadeAtaques();

        infoAtaque.text = "Diminui popularidade do oponente";
        qte_Ataque.text = "Qte.: " + qtePerguntaPolemica + "/3";
        dialogo.text = "Utilizar o ataque Pergunta Polemica?";
        aut_Ataque.text = "Autoridade: 40 - 50";

    }

    // ---------------------------------------------------

    // AUMENTA APOIO DA MIDIA

    // HABEAS CORPUS - aumenta apoio da mídia
    public void AtaqueHabeasCorpus()
    {

        ataquePlayer = false;
        defesaPlayer = true;
        mudaStatusPlayer = false;

        CalculoConfiancaPlayer();
        MitouLacrou();

        autoridadeAtaque = Random.Range(40, 50);

        if (qteHabeasCorpus <= 0)
        {
            ataqueHabeasCorpus.interactable = false;
        }
        if (qteHabeasCorpus > 0)
        {
            danoPlayer = Mathf.Round(Mathf.Round(Mathf.Round(((2 * levelPlayer / 5 + 2) * apoioMidiaPlayer * autoridadeAtaque / apoioMidiaPlayer) / 50) + 2) * mitouLacrou) * confianca;
            ataqueHabeasCorpus.interactable = true;
            apoioMidiaPlayer = apoioMidiaPlayer + danoPlayer;
            if (confianca == 0)
            {
                dialogo.text = "Seu político errou o ataque porque não foi confiante";

            }
            if (confianca != 0)
            {
                dialogo.text = "Você usou Habeas corpus. Agora, seu Apoio da Mídia aumentou para " + apoioMidiaPlayer;

                if (direita == true && chanceMitarLacrar == 10)
                {
                    dialogo.text = ("Muito opressor! Seu personagem MITOU e aumentou o Apoio da Mídia para " + apoioMidiaPlayer);

                }
                if (esquerda == true && chanceMitarLacrar == 10)
                {
                    dialogo.text = ("Que tiro foi esse?! Seu personagem LACROU e aumentou o Apoio da Mídia para " + apoioMidiaPlayer);

                }

            }

            qteHabeasCorpus = qteHabeasCorpus - 1;
            AtualizaQuantidadeAtaques();
        }





        DesabilitaBotoes();

        playerAtacou = true;
        print("Ataque Habeas finalizado");

    }

    public void SelecionaHabeasCorpus()
    {
        infoAtaque.text = "Aumenta seu Apoio da Mídia (defesa)";
        qte_Ataque.text = "Qte.: " + qteHabeasCorpus + "/3";
        dialogo.text = "Utilizar o ataque Habeas Corpus?";
        aut_Ataque.text = "Autoridade: 40 - 50";

    }

    // MUDA STATUS

    // MILITANCIA - aumenta autoridade
    public void AtaqueMilitancia()
    {
        ataquePlayer = false;
        defesaPlayer = false;
        mudaStatusPlayer = true;
        autoridadeAtaque = Random.Range(30, 40);
        MitouLacrou();

        CalculoConfiancaPlayer();

        if (qteMilitancia <= 0)
        {
            ataqueMilitancia.interactable = false;
        }
        if (qteMilitancia > 0)
        {

            ataqueMilitancia.interactable = true;
            danoPlayer = Mathf.Round(Mathf.Round(Mathf.Round(((2 * levelPlayer / 5 + 2) * autoridadePlayer * autoridadeAtaque / autoridadePlayer) / 50) + 2) * mitouLacrou) * confianca;
            autoridadePlayer = autoridadePlayer + danoPlayer;
            if (confianca == 0)
            {
                dialogo.text = "Seu político errou o ataque porque não foi confiante";

            }
            if (confianca != 0)
            {
                dialogo.text = "Você usou sua Militância. Agora, sua autoridade aumentou para " + autoridadePlayer;

                if (direita == true && chanceMitarLacrar == 10)
                {
                    dialogo.text = ("Muito opressor! Seu personagem MITOU e aumentou sua Autoridade para " + autoridadePlayer);

                }
                if (esquerda == true && chanceMitarLacrar == 10)
                {
                    dialogo.text = ("Que tiro foi esse?! Seu personagem LACROU e aumentou sua Autoridade para " + autoridadePlayer);

                }

            }

            qteMilitancia = qteMilitancia - 1;
            AtualizaQuantidadeAtaques();

        }


        DesabilitaBotoes();

        playerAtacou = true;
    }

    public void SelecionaMilitancia()
    {
        infoAtaque.text = "Aumenta sua Autoridade (ataque)";
        qte_Ataque.text = "Qte.: " + qteMilitancia + "/3";
        dialogo.text = "Utilizar o ataque Militancia?";
        aut_Ataque.text = "Autoridade: 30 - 40";

    }

    // DENUNCIA SUPREMO - tira autoridade
    public void AtaqueDenuciaSupremo()
    {
        ataquePlayer = true;
        defesaPlayer = false;
        mudaStatusPlayer = false;

        Protegido();

        MitouLacrou();
        CalculoConfiancaPlayer();
        autoridadeAtaque = Random.Range(30, 40);

        if (autoridadeInimigo <= 5)
        {
            ataqueDenunciaSupremo.interactable = false;
            dialogo.text = "O oponente já está com o mínimo de Autoridade";

        }

        if (qteDenunciaSupremo <= 0)
        {
            ataqueDenunciaSupremo.interactable = false;
        }
        if (qteDenunciaSupremo > 0)
        {

            ataqueDenunciaSupremo.interactable = true;


            danoPlayer = Mathf.Round(Mathf.Round(Mathf.Round(((2 * levelPlayer / 5 + 2) * autoridadePlayer * autoridadeAtaque / autoridadeInimigo) / 50) + 2) * mitouLacrou) * confianca;

            autoridadeInimigo = autoridadeInimigo - danoPlayer;


            if (confianca == 0)
            {
                dialogo.text = "Seu político errou o ataque porque não foi confiante";

            }
            if (confianca != 0)
            {
                dialogo.text = "Você denunciou seu oponente ao Supremo, diminuindo a autoridade para " + autoridadeInimigo;

                if (direita == true && chanceMitarLacrar == 10)
                {
                    dialogo.text = ("Muito opressor! Seu personagem MITOU e tirou " + autoridadeInimigo + "  de autoridade do seu oponente");

                }
                if (esquerda == true && chanceMitarLacrar == 10)
                {
                    dialogo.text = ("Que tiro foi esse?! Seu personagem LACROU e tirou " + autoridadeInimigo + "  de autoridadedo seu oponente");

                }
            }

            qteDenunciaSupremo = qteDenunciaSupremo - 1;
            AtualizaQuantidadeAtaques();

        }


        DesabilitaBotoes();

        playerAtacou = true;
    }

    public void SelecionaDenunciaSupremo()
    {
        infoAtaque.text = "Diminuí Autoridade (ataque) de seu oponente.";
        qte_Ataque.text = "Qte.: " + qteDenunciaSupremo + "/3";
        dialogo.text = "Utilizar o ataque Denuncia ao Supremo?";
        aut_Ataque.text = "Autoridade: 30 - 40";

    }


    //  ELOGIO JORNAL - aumenta popularidade
    public void AtaqueElogioJornal()
    {
        ataquePlayer = false;
        defesaPlayer = false;
        mudaStatusPlayer = true;
        CalculoConfiancaPlayer();

        autoridadeAtaque = Random.Range(40, 50);

        if (qteElogioJornal <= 0)
        {
            ataqueElogioJornal.interactable = false;
        }
        if (qteElogioJornal > 0)
        {
            danoPlayer = (autoridadeAtaque / 2) * confianca;
            popularidadePlayer = popularidadePlayer + danoPlayer;
            qteElogioJornal = qteElogioJornal - 1;
            AtualizaQuantidadeAtaques();

            ataqueElogioJornal.interactable = true;

            if (confianca == 0)
            {
                dialogo.text = "Seu político errou o ataque porque não foi confiante";

            }
            if (confianca != 0)
            {
                dialogo.text = "Você foi elogiado em uma matéria do Jornal. Agora, sua popularidade aumentou para " + popularidadePlayer;

            }

        }



        DesabilitaBotoes();

        playerAtacou = true;
    }

    public void SelecionaElogioJornal()
    {
        infoAtaque.text = "Aumenta sua Popularidade";
        qte_Ataque.text = "Qte.: " + qteElogioJornal + "/1";
        dialogo.text = "Utilizar o ataque Elogio do Jornal?";
        aut_Ataque.text = "Autoridade: 40 - 50";

    }

    // FORO PRIVILEGIADO - defesa 100% de um ataque
    public void AtaqueForoPrivilegiado()
    {
        ataquePlayer = false;
        defesaPlayer = true;
        mudaStatusPlayer = false;

        if (qteForoPrivilegiado <= 0)
        {
            ataqueForoPrivilegiado.interactable = false;
        }
        if (qteForoPrivilegiado > 0)
        {

            ataqueForoPrivilegiado.interactable = true;


            playerProtegido = true;
            dialogo.text = "Você utilizou seu Foro Privilegiado e está 100% protegido de um ataque ";
            qteForoPrivilegiado = qteForoPrivilegiado - 1;
            AtualizaQuantidadeAtaques();



        }



        DesabilitaBotoes();

        playerAtacou = true;
    }

    public void SelecionaForoPrivilegiado()
    {
        infoAtaque.text = "Protege 100% de um ataque";
        qte_Ataque.text = "Qte.: " + qteForoPrivilegiado + "/2";
        dialogo.text = "Utilizar o ataque Foro Privilegiado?";
        aut_Ataque.text = "Autoridade: 100";

    }

    // VAZAR LIGACOES - tira apoio da mídia do oponente

    public void AtaqueVazarLigacoes()
    {
        ataquePlayer = true;
        defesaPlayer = false;
        mudaStatusPlayer = false;

        MitouLacrou();
        Protegido();
        CalculoConfiancaPlayer();
        autoridadeAtaque = Random.Range(30, 40);

        if (qteVazarLigacoes <= 0)
        {
            ataqueVazarLigacoes.interactable = false;
        }
        if (qteVazarLigacoes > 0)
        {

            ataqueVazarLigacoes.interactable = true;

            danoPlayer = Mathf.Round(Mathf.Round(Mathf.Round(((2 * levelPlayer / 5 + 2) * apoioMidiaPlayer * autoridadeAtaque / apoioMidiaInimigo) / 50) + 2) * mitouLacrou) * confianca;
            if (apoioMidiaInimigo > danoPlayer)
            {
                apoioMidiaInimigo = apoioMidiaInimigo - danoPlayer;

                if (confianca == 0)
                {
                    dialogo.text = "Seu político errou o ataque porque não foi confiante";

                }
                if (confianca != 0)
                {
                    dialogo.text = "Você vazou ligações comprometedoras de seu oponente e tirou " + danoPlayer + " de Apoio da Mídia";

                    if (direita == true && chanceMitarLacrar == 10)
                    {
                        dialogo.text = ("Muito opressor! Seu personagem MITOU e tirou " + danoPlayer + " de Apoio da Mídia");

                    }
                    if (esquerda == true && chanceMitarLacrar == 10)
                    {
                        dialogo.text = ("Que tiro foi esse?! Seu personagem LACROU e tirou " + danoPlayer + " de Apoio da Mídia");

                    }
                }

                qteVazarLigacoes = qteVazarLigacoes - 1;
                AtualizaQuantidadeAtaques();

            }
            if (apoioMidiaInimigo < danoPlayer)
            {
                apoioMidiaInimigo = 1;
                if (confianca == 0)
                {
                    dialogo.text = "Seu político errou o ataque porque não foi confiante";

                }
                if (confianca != 0)
                {
                    dialogo.text = "Você vazou ligações comprometedoras de seu oponente e tirou " + danoPlayer + " de Apoio da Mídia";

                }

                qteVazarLigacoes = qteVazarLigacoes - 1;
                AtualizaQuantidadeAtaques();

            }
            if (apoioMidiaInimigo <= 1 && qteVazarLigacoes > 0)
            {
                ataqueVazarLigacoes.interactable = false;
                dialogo.text = "O oponente já está com o mínimo de Apoio da Mídia";

            }





        }



        DesabilitaBotoes();

        playerAtacou = true;
    }

    public void SelecionaVazarLigacoes()
    {
        infoAtaque.text = "Diminuí Apoio da Mídia (defesa) do oponente.";
        qte_Ataque.text = "Qte.: " + qteVazarLigacoes + "/3";
        dialogo.text = "Utilizar o ataque Vazar Ligações?";
        aut_Ataque.text = "Autoridade: 30 - 40";

    }

    // AD HOMINEM - tira confiança (precisão) do oponente
    public void AtaqueAdHominem()
    {

        ataquePlayer = true;
        defesaPlayer = false;
        mudaStatusPlayer = false;

        MitouLacrou();
        Protegido();
        CalculoConfiancaPlayer();
        autoridadeAtaque = Random.Range(10, 15);

        if (qteAdHominem <= 0)
        {
            ataqueAdHominem.interactable = false;
        }
        if (qteAdHominem > 0)
        {

            ataqueAdHominem.interactable = true;

            danoPlayer = Mathf.Round(Mathf.Round(Mathf.Round(((2 * levelPlayer / 5 + 2) * confiancaPlayer * autoridadeAtaque / confiancaInimigo) / 100) + 2) * mitouLacrou) * confianca;
            if (confiancaInimigo > danoPlayer)
            {
                confiancaInimigo = (int)(confiancaInimigo - danoPlayer);
                if (confianca == 0)
                {
                    dialogo.text = "Seu político errou o ataque porque não foi confiante";

                }
                if (confianca != 0)
                {
                    dialogo.text = "Você utilizou argumentos Ad Hominem e tirou " + danoPlayer + " de Confiança do seu oponente";

                    if (direita == true && chanceMitarLacrar == 10)
                    {
                        dialogo.text = ("Muito opressor! Seu personagem MITOU e tirou " + danoPlayer + " de Confiança do seu oponente");

                    }
                    if (esquerda == true && chanceMitarLacrar == 10)
                    {
                        dialogo.text = ("Que tiro foi esse?! Seu personagem LACROU e tirou " + danoPlayer + "de Confiança do seu oponente");

                    }

                }
                qteAdHominem = qteAdHominem - 1;
                AtualizaQuantidadeAtaques();

            }
            if (confiancaInimigo < danoPlayer)
            {
                confiancaInimigo = 1;
                if (confianca == 0)
                {
                    dialogo.text = "Seu político errou o ataque porque não foi confiante";

                }
                if (confianca != 0)
                {
                    dialogo.text = "Você utilizou argumentos Ad Hominem e tirou " + danoPlayer + " de Confiança do seu oponente";

                }
                qteAdHominem = qteAdHominem - 1;
                AtualizaQuantidadeAtaques();

            }
            if (confiancaInimigo <= 1 && qteAdHominem > 0)
            {
                ataqueAdHominem.interactable = false;
                dialogo.text = "O oponente já está com o mínimo de Confiança";

            }





        }



        DesabilitaBotoes();

        playerAtacou = true;
    }

    public void SelecionaAdHominem()
    {
        infoAtaque.text = "Diminuí a confiança (precisão) do oponente.";
        qte_Ataque.text = "Qte.: " + qteAdHominem + "/3";
        dialogo.text = "Utilizar o ataque Ad Hominem?";
        aut_Ataque.text = "Autoridade: 10 - 15";

    }

    // APOIO CENTRAO - aumenta confiança do player
    public void AtaqueApoioCentrao()
    {
        ataquePlayer = false;
        defesaPlayer = false;
        mudaStatusPlayer = true;

        MitouLacrou();
        Protegido();
        CalculoConfiancaPlayer();
        autoridadeAtaque = Random.Range(30, 40);

        if (qteApoioCentrao <= 0)
        {
            ataqueApoioCentrao.interactable = false;
        }
        if (qteApoioCentrao > 0)
        {

            ataqueApoioCentrao.interactable = true;

            danoPlayer = Mathf.Round(Mathf.Round(Mathf.Round(((2 * levelPlayer / 5 + 2) * confiancaPlayer * autoridadeAtaque / confiancaPlayer) / 50) + 2) * mitouLacrou) * confianca;


            confiancaPlayer = (int)(confiancaPlayer + danoPlayer);
            if (confianca == 0)
            {
                dialogo.text = "Seu político errou o ataque porque não foi confiante";

            }
            if (confianca != 0)
            {
                dialogo.text = "Você conquistou apoio do Centrão e aumentou " + danoPlayer + " de sua Confiança.";

                if (direita == true && chanceMitarLacrar == 10)
                {
                    dialogo.text = ("Muito opressor! Seu personagem MITOU e aumentou " + danoPlayer + " de sua Retórica.");

                }
                if (esquerda == true && chanceMitarLacrar == 10)
                {
                    dialogo.text = ("Que tiro foi esse?! Seu personagem LACROU e aumentou " + danoPlayer + " de sua Retórica.");

                }
            }
            qteApoioCentrao = qteApoioCentrao - 1;
            AtualizaQuantidadeAtaques();


        }



        DesabilitaBotoes();

        playerAtacou = true;
    }

    public void SelecionaApoioCentrao()
    {
        infoAtaque.text = "Aumenta sua confiaça (precisão).";
        qte_Ataque.text = "Qte.: " + qteApoioCentrao + "/3";
        dialogo.text = "Utilizar o ataque Apoio Centrão?";
        aut_Ataque.text = "Autoridade: 30 - 40";

    }

    // --------------- ATAQUES ESPECIAIS ------------------ //


    // DELAÇÃO PREMIADA - aumenta autoridade e tira popularidade do oponente

    public void AtaqueDelacaoPremiada()
    {
        MitouLacrou();
        Protegido();
        CalculoConfiancaPlayer();

        autoridadeAtaque = Random.Range(40, 50);
        danoPlayer = Mathf.Round(Mathf.Round(Mathf.Round(((2 * levelPlayer / 5 + 2) * autoridadePlayer * autoridadeAtaque / apoioMidiaInimigo) / 50) + 2) * mitouLacrou) * confianca;



        if (qteDelacaoPremiada <= 0)
        {
            ataqueDelacaoPremiada.interactable = false;
        }
        if (qteDelacaoPremiada > 0)
        {
            ataqueDelacaoPremiada.interactable = true;

        }


        if (popularidadeInimigo >= danoPlayer && qteDelacaoPremiada > 0)
        {

            popularidadeInimigo = popularidadeInimigo - danoPlayer;
            autoridadePlayer = autoridadePlayer + (danoPlayer / 2);
            qteDelacaoPremiada = qteDelacaoPremiada - 1;

            AtualizaQuantidadeAtaques();

            if (confianca == 0)
            {
                dialogo.text = "Seu político errou o ataque porque não foi confiante";

            }
            if (confianca != 0)
            {
                dialogo.text = "Você usou Delação Premiada, tirou " + danoPlayer + " de popularidade do oponente e aumentou sua autoridade (ataque) para " + danoPlayer;


            }


        }

        if (popularidadeInimigo < danoPlayer && playerAtacou == false && qteFraudarUrnas > 0)
        {

            qteFraudarUrnas = qteFraudarUrnas - 1;
            AtualizaQuantidadeAtaques();

            autoridadePlayer = autoridadePlayer + (danoPlayer / 2);

            danoPlayer = popularidadeInimigo * confianca;
            popularidadeInimigo = (popularidadeInimigo - danoPlayer) * confianca;

            if (confianca == 0)
            {
                dialogo.text = "Seu político errou o ataque porque não foi confiante";
            }
            if (confianca != 0)
            {
                dialogo.text = "Você usou Delação Premiada, tirou " + danoPlayer + " de popularidade do oponente e aumentou sua autoridade (ataque) para " + danoPlayer;

            }


        }


        PlayerPrefs.SetFloat("PopInimigos", popularidadeInimigo);
        popularidadeInimigo = PlayerPrefs.GetFloat("PopInimigos"); //

        popInimigo_txtUI.text = popularidadeInimigo.ToString();
        barraPopInimigo.value = popularidadeInimigo;

        pop_txtUI.text = Mathf.Round(popularidadePlayer).ToString();
        barraPop.value = popularidadePlayer;


        DesabilitaBotoes();


        playerAtacou = true;

    } // FIM ATAQUE DELAÇÃO PREMIADA

    public void SelecionaDelacaoPremiada()
    {
        QuantidadeAtaques();

        infoAtaque.text = "Diminui popularidade do oponente e aumenta sua autoridade (ataque)";
        qte_Ataque.text = "Qte.: " + qteDelacaoPremiada + "/3";
        dialogo.text = "Utilizar o ataque Delação Premiada?";
        aut_Ataque.text = "Autoridade: 40 - 50";

    }

    // -------------------- QTE ATAQUES ------------------------- //

    public void QuantidadeAtaques()
    {
        if (PlayerPrefs.GetInt("LulaDentroScene") == 1)
        {
            qteFraudarUrnas = qteFraudarUrnasLula;
            qteHabeasCorpus = qteHabeasLula;
            qteMilitancia = qteMilitanciaLula;
            qteElogioJornal = qteElogioLula;
            qteDenunciaSupremo = qteDenunciaSupremoLula;
            qteForoPrivilegiado = qteForoLula;
            qteVazarLigacoes = qteVazarLula;
            qteAdHominem = qteAdHominemLula;
            qteApoioCentrao = qteApoioCentraoLula;
            qteDelacaoPremiada = qteDelacaoLula;
            qteFakeNews = qteFakeNewsLula;
            qtePerguntaPolemica = qtePerguntaPolemicaLula;

        }

        if (PlayerPrefs.GetInt("CiroDentroScene") == 1)
        {
            qteFraudarUrnas = qteFraudarUrnasCiro;
            qteHabeasCorpus = qteHabeasCiro;
            qteMilitancia = qteMilitanciaCiro;
            qteElogioJornal = qteElogioCiro;
            qteDenunciaSupremo = qteDenunciaSupremoCiro;
            qteForoPrivilegiado = qteForoCiro;
            qteVazarLigacoes = qteVazarCiro;
            qteAdHominem = qteAdHominemCiro;
            qteApoioCentrao = qteApoioCentraoCiro;
            qteDelacaoPremiada = qteDelacaoCiro;
            qteFakeNews = qteFakeNewsCiro;
            qtePerguntaPolemica = qtePerguntaPolemicaCiro;

        }

        if (PlayerPrefs.GetInt("BolsoDentroScene") == 1)
        {
            qteFraudarUrnas = qteFraudarUrnasBolso;
            qteHabeasCorpus = qteHabeasBolso;
            qteMilitancia = qteMilitanciaBolso;
            qteElogioJornal = qteElogioBolso;
            qteDenunciaSupremo = qteDenunciaSupremoBolso;
            qteForoPrivilegiado = qteForoBolso;
            qteVazarLigacoes = qteVazarBolso;
            qteAdHominem = qteAdHominemBolso;
            qteApoioCentrao = qteApoioCentraoBolso;
            qteDelacaoPremiada = qteDelacaoBolso;
            qteFakeNews = qteFakeNewsBolso;
            qtePerguntaPolemica = qtePerguntaPolemicaBolso;

        }

        if (PlayerPrefs.GetInt("DilmaDentroScene") == 1)
        {
            qteFraudarUrnas = qteFraudarUrnasDilma;
            qteHabeasCorpus = qteHabeasDilma;
            qteMilitancia = qteMilitanciaDilma;
            qteElogioJornal = qteElogioDilma;
            qteDenunciaSupremo = qteDenunciaSupremoDilma;
            qteForoPrivilegiado = qteForoDilma;
            qteVazarLigacoes = qteVazarDilma;
            qteAdHominem = qteAdHominemDilma;
            qteApoioCentrao = qteApoioCentraoDilma;
            qteDelacaoPremiada = qteDelacaoDilma;
            qteFakeNews = qteFakeNewsDilma;
            qtePerguntaPolemica = qtePerguntaPolemicaDilma;

        }

        if (PlayerPrefs.GetInt("SuplicyDentroScene") == 1)
        {
            qteFraudarUrnas = qteFraudarUrnasSuplicy;
            qteHabeasCorpus = qteHabeasSuplicy;
            qteMilitancia = qteMilitanciaSuplicy;
            qteElogioJornal = qteElogioSuplicy;
            qteDenunciaSupremo = qteDenunciaSupremoSuplicy;
            qteForoPrivilegiado = qteForoSuplicy;
            qteVazarLigacoes = qteVazarSuplicy;
            qteAdHominem = qteAdHominemSuplicy;
            qteApoioCentrao = qteApoioCentraoSuplicy;
            qteDelacaoPremiada = qteDelacaoSuplicy;
            qteFakeNews = qteFakeNewsSuplicy;
            qtePerguntaPolemica = qtePerguntaPolemicaSuplicy;

        }


        if (PlayerPrefs.GetInt("EneasDentroScene") == 1)
        {
            qteFraudarUrnas = qteFraudarUrnasEneas;
            qteHabeasCorpus = qteHabeasEneas;
            qteMilitancia = qteMilitanciaEneas;
            qteElogioJornal = qteElogioEneas;
            qteDenunciaSupremo = qteDenunciaSupremoEneas;
            qteForoPrivilegiado = qteForoEneas;
            qteVazarLigacoes = qteVazarEneas;
            qteAdHominem = qteAdHominemEneas;
            qteApoioCentrao = qteApoioCentraoEneas;
            qteDelacaoPremiada = qteDelacaoEneas;
            qteFakeNews = qteFakeNewsEneas;
            qtePerguntaPolemica = qtePerguntaPolemicaEneas;

        }

        if (PlayerPrefs.GetInt("DodorioDentroScene") == 1)
        {
            qteFraudarUrnas = qteFraudarUrnasDodorio;
            qteHabeasCorpus = qteHabeasDodorio;
            qteMilitancia = qteMilitanciaDodorio;
            qteElogioJornal = qteElogioDodorio;
            qteDenunciaSupremo = qteDenunciaSupremoDodorio;
            qteForoPrivilegiado = qteForoDodorio;
            qteVazarLigacoes = qteVazarDodorio;
            qteAdHominem = qteAdHominemDodorio;
            qteApoioCentrao = qteApoioCentraoDodorio;
            qteDelacaoPremiada = qteDelacaoDodorio;
            qteFakeNews = qteFakeNewsDodorio;
            qtePerguntaPolemica = qtePerguntaPolemicaDodorio;

        }

        VerificaQteAtaques();
    }

    public void AtualizaQuantidadeAtaques()
    {
        if (PlayerPrefs.GetInt("LulaDentroScene") == 1)
        {
            qteFraudarUrnasLula = qteFraudarUrnas;
            qteHabeasLula = qteHabeasCorpus;
            qteMilitanciaLula = qteMilitancia;
            qteElogioLula = qteElogioJornal;
            qteDenunciaSupremoLula = qteDenunciaSupremo;
            qteForoLula = qteForoPrivilegiado;
            qteVazarLula = qteVazarLigacoes;
            qteAdHominemLula = qteAdHominem;
            qteApoioCentraoLula = qteApoioCentrao;
            qteDelacaoLula = qteDelacaoPremiada;
            qteFakeNewsLula = qteFakeNews;
            qtePerguntaPolemicaLula = qtePerguntaPolemica;
        }

        if (PlayerPrefs.GetInt("CiroDentroScene") == 1)
        {
            qteFraudarUrnasCiro = qteFraudarUrnas;
            qteHabeasCiro = qteHabeasCorpus;
            qteMilitanciaCiro = qteMilitancia;
            qteElogioCiro = qteElogioJornal;
            qteDenunciaSupremoCiro = qteDenunciaSupremo;
            qteForoCiro = qteForoPrivilegiado;
            qteVazarCiro = qteVazarLigacoes;
            qteAdHominemCiro = qteAdHominem;
            qteApoioCentraoCiro = qteApoioCentrao;
            qteDelacaoCiro = qteDelacaoPremiada;
            qteFakeNewsCiro = qteFakeNews;
            qtePerguntaPolemicaCiro = qtePerguntaPolemica;


        }

        if (PlayerPrefs.GetInt("BolsoDentroScene") == 1)
        {
            qteFraudarUrnasBolso = qteFraudarUrnas;
            qteHabeasBolso = qteHabeasCorpus;
            qteMilitanciaBolso = qteMilitancia;
            qteElogioBolso = qteElogioJornal;
            qteDenunciaSupremoBolso = qteDenunciaSupremo;
            qteForoBolso = qteForoPrivilegiado;
            qteVazarBolso = qteVazarLigacoes;
            qteAdHominemBolso = qteAdHominem;
            qteApoioCentraoBolso = qteApoioCentrao;
            qteDelacaoBolso = qteDelacaoPremiada;
            qteFakeNewsBolso = qteFakeNews;
            qtePerguntaPolemicaBolso = qtePerguntaPolemica;

        }

        if (PlayerPrefs.GetInt("DilmaDentroScene") == 1)
        {
            qteFraudarUrnasDilma = qteFraudarUrnas;
            qteHabeasDilma = qteHabeasCorpus;
            qteMilitanciaDilma = qteMilitancia;
            qteElogioDilma = qteElogioJornal;
            qteDenunciaSupremoDilma = qteDenunciaSupremo;
            qteForoDilma = qteForoPrivilegiado;
            qteVazarDilma = qteVazarLigacoes;
            qteAdHominemDilma = qteAdHominem;
            qteApoioCentraoDilma = qteApoioCentrao;
            qteDelacaoDilma = qteDelacaoPremiada;
            qteFakeNewsDilma = qteFakeNews;
            qtePerguntaPolemicaDilma = qtePerguntaPolemica;

        }

        if (PlayerPrefs.GetInt("SuplicyDentroScene") == 1)
        {
            qteFraudarUrnasSuplicy = qteFraudarUrnas;
            qteHabeasSuplicy = qteHabeasCorpus;
            qteMilitanciaSuplicy = qteMilitancia;
            qteElogioSuplicy = qteElogioJornal;
            qteDenunciaSupremoSuplicy = qteDenunciaSupremo;
            qteForoSuplicy = qteForoPrivilegiado;
            qteVazarSuplicy = qteVazarLigacoes;
            qteAdHominemSuplicy = qteAdHominem;
            qteApoioCentraoSuplicy = qteApoioCentrao;
            qteDelacaoSuplicy = qteDelacaoPremiada;
            qteFakeNewsSuplicy = qteFakeNews;
            qtePerguntaPolemicaSuplicy = qtePerguntaPolemica;

        }

        if (PlayerPrefs.GetInt("EneasDentroScene") == 1)
        {
            qteFraudarUrnasEneas = qteFraudarUrnas;
            qteHabeasEneas = qteHabeasCorpus;
            qteMilitanciaEneas = qteMilitancia;
            qteElogioEneas = qteElogioJornal;
            qteDenunciaSupremoEneas = qteDenunciaSupremo;
            qteForoEneas = qteForoPrivilegiado;
            qteVazarEneas = qteVazarLigacoes;
            qteAdHominemEneas = qteAdHominem;
            qteApoioCentraoEneas = qteApoioCentrao;
            qteDelacaoEneas = qteDelacaoPremiada;
            qteFakeNewsEneas = qteFakeNews;
            qtePerguntaPolemicaEneas = qtePerguntaPolemica;

        }

        if (PlayerPrefs.GetInt("DodorioDentroScene") == 1)
        {
            qteFraudarUrnasDodorio = qteFraudarUrnas;
            qteHabeasDodorio = qteHabeasCorpus;
            qteMilitanciaDodorio = qteMilitancia;
            qteElogioDodorio = qteElogioJornal;
            qteDenunciaSupremoDodorio = qteDenunciaSupremo;
            qteForoDodorio = qteForoPrivilegiado;
            qteVazarDodorio = qteVazarLigacoes;
            qteAdHominemDodorio = qteAdHominem;
            qteApoioCentraoDodorio = qteApoioCentrao;
            qteDelacaoDodorio = qteDelacaoPremiada;
            qteFakeNewsDodorio = qteFakeNews;
            qtePerguntaPolemicaDodorio = qtePerguntaPolemica;

        }
    }

    public void ResetaQuantidadeAtaques()
    {
        qteFraudarUrnasLula = 5;
        qteFraudarUrnasCiro = 5;
        qteFraudarUrnasBolso = 5;
        qteFraudarUrnasDilma = 5;
        qteFraudarUrnasSuplicy = 5;
        qteFraudarUrnasEneas = 5;
        qteFraudarUrnasDodorio = 5;

        qteHabeasLula = 3;
        qteHabeasCiro = 3;
        qteHabeasBolso = 3;
        qteHabeasDilma = 3;
        qteHabeasSuplicy = 3;
        qteHabeasEneas = 3;
        qteHabeasDodorio = 3;

        qteMilitanciaLula = 3;
        qteMilitanciaCiro = 3;
        qteMilitanciaBolso = 3;
        qteMilitanciaDilma = 3;
        qteMilitanciaSuplicy = 3;
        qteMilitanciaEneas = 3;
        qteMilitanciaDodorio = 3;

        qteElogioLula = 1;
        qteElogioCiro = 1;
        qteElogioBolso = 1;
        qteElogioDilma = 1;
        qteElogioSuplicy = 1;
        qteElogioEneas = 1;
        qteElogioDodorio = 1;

        qteDenunciaSupremoLula = 3;
        qteDenunciaSupremoCiro = 3;
        qteDenunciaSupremoBolso = 3;
        qteDenunciaSupremoDilma = 3;
        qteDenunciaSupremoSuplicy = 3;
        qteDenunciaSupremoEneas = 3;
        qteDenunciaSupremoDodorio = 3;

        qteForoLula = 2;
        qteForoCiro = 2;
        qteForoBolso = 2;
        qteForoDilma = 2;
        qteForoSuplicy = 2;
        qteForoEneas = 2;
        qteForoDodorio = 2;

        qteVazarLula = 3;
        qteVazarCiro = 3;
        qteVazarBolso = 3;
        qteVazarDilma = 3;
        qteVazarSuplicy = 3;
        qteVazarEneas = 3;
        qteVazarDodorio = 3;

        qteAdHominemLula = 3;
        qteAdHominemCiro = 3;
        qteAdHominemBolso = 3;
        qteAdHominemDilma = 3;
        qteAdHominemSuplicy = 3;
        qteAdHominemEneas = 3;
        qteAdHominemDodorio = 3;

        qteApoioCentraoLula = 3;
        qteApoioCentraoCiro = 3;
        qteApoioCentraoBolso = 3;
        qteApoioCentraoDilma = 3;
        qteApoioCentraoSuplicy = 3;
        qteApoioCentraoEneas = 3;
        qteApoioCentraoDodorio = 3;

        qteDelacaoLula = 3;
        qteDelacaoCiro = 3;
        qteDelacaoBolso = 3;
        qteDelacaoDilma = 3;
        qteDelacaoSuplicy = 3;
        qteDelacaoEneas = 3;
        qteDelacaoDodorio = 3;

        qteFakeNewsLula = 3;
        qteFakeNewsCiro = 3;
        qteFakeNewsBolso = 3;
        qteFakeNewsDilma = 3;
        qteFakeNewsSuplicy = 3;
        qteFakeNewsEneas = 3;
        qteFakeNewsDodorio = 3;

        qtePerguntaPolemicaLula = 3;
        qtePerguntaPolemicaCiro = 3;
        qtePerguntaPolemicaBolso = 3;
        qtePerguntaPolemicaDilma = 3;
        qtePerguntaPolemicaSuplicy = 3;
        qtePerguntaPolemicaEneas = 3;
        qtePerguntaPolemicaDodorio = 3;

    }

    public void VerificaQteAtaques()
    {
        if (qteFraudarUrnas <= 0)
        {
            ataqueFraudarUrnas.interactable = false;
        }
        if (qteFraudarUrnas > 0)
        {
            ataqueFraudarUrnas.interactable = true;

        }

        if (qteHabeasCorpus <= 0)
        {
            ataqueHabeasCorpus.interactable = false;
        }
        if (qteHabeasCorpus > 0)
        {
            ataqueHabeasCorpus.interactable = true;

        }

        if (qteMilitancia <= 0)
        {
            ataqueMilitancia.interactable = false;
        }
        if (qteMilitancia > 0)
        {
            ataqueMilitancia.interactable = true;

        }

        if (qteElogioJornal <= 0)
        {
            ataqueElogioJornal.interactable = false;
        }
        if (qteElogioJornal > 0)
        {
            ataqueElogioJornal.interactable = true;

        }

        if (qteDenunciaSupremo <= 0)
        {
            ataqueDenunciaSupremo.interactable = false;
        }
        if (qteDenunciaSupremo > 0)
        {
            ataqueDenunciaSupremo.interactable = true;

        }

        if (qteForoPrivilegiado <= 0)
        {
            ataqueForoPrivilegiado.interactable = false;
        }
        if (qteForoPrivilegiado > 0)
        {
            ataqueForoPrivilegiado.interactable = true;

        }

        if (qteVazarLigacoes <= 0)
        {
            ataqueVazarLigacoes.interactable = false;
        }
        if (qteVazarLigacoes > 0)
        {
            ataqueVazarLigacoes.interactable = true;

        }

        if (qteAdHominem <= 0)
        {
            ataqueAdHominem.interactable = false;
        }
        if (qteAdHominem > 0)
        {
            ataqueAdHominem.interactable = true;

        }

        if (qteApoioCentrao <= 0)
        {
            ataqueApoioCentrao.interactable = false;
        }
        if (qteApoioCentrao > 0)
        {
            ataqueApoioCentrao.interactable = true;

        }

        if (qteDelacaoPremiada <= 0)
        {
            ataqueDelacaoPremiada.interactable = false;
        }
        if (qteDelacaoPremiada > 0)
        {
            ataqueDelacaoPremiada.interactable = true;

        }

        if (qteFakeNews <= 0)
        {
            ataqueFakeNews.interactable = false;
        }
        if (qteFakeNews > 0)
        {
            ataqueFakeNews.interactable = true;

        }

        if (qtePerguntaPolemica <= 0)
        {
            ataquePerguntaPolemica.interactable = false;
        }
        if (qtePerguntaPolemica > 0)
        {
            ataquePerguntaPolemica.interactable = true;

        }
    }




    // ---------------                 ------------------ //


    // --------------- ATAQUES INIMIGO ------------------ //


    // ---------------                 ------------------ //

    // TIRA POPULARIDADE PLAYER

    public void AtaqueInimigoFraudarUrnas(int autoridadeAtaque)
    {
        MitouLacrou();
        CalculoConfiancaInimigo();
        Protegido();

        danoInimigo = Mathf.Round(Mathf.Round(Mathf.Round(((2 * levelInimigo / 5 + 2) * autoridadeInimigo * autoridadeAtaque / apoioMidiaPlayer) / 50) + 2) * mitouLacrou) * confianca;



        if (Mathf.Round(popularidadePlayer) <= 0)
        {
            popularidadePlayer = 0;
        }




        somaPopPartido = Mathf.Round(somaPopPartido - danoInimigo);
        popularidadePlayer = Mathf.Round(popularidadePlayer) - danoInimigo;
        dialogo.text = " ";

        if (popularidadePlayer <= 0)
        {
            popularidadePlayer = 0;
        }

        if (confianca == 0)
        {
            dialogo.text = "O oponente errou o ataque, pois não foi confiante";

        }
        if (confianca != 0)
        {
            dialogo.text = "O oponente usou Fraudar Urnas e tirou " + danoInimigo + " de sua popularidade";

            if (direita == true && chanceMitarLacrar == 10)
            {
                dialogo.text = ("Oponente MITOU com Fraudar Urnas e tirou " + danoInimigo + " da sua popularidade");

            }
            if (esquerda == true && chanceMitarLacrar == 10)
            {
                dialogo.text = ("Oponente LACROU com Fraudar Urnas e tirou " + danoInimigo + " da sua popularidade");

            }
        }







        StartCoroutine(DialogoEscolhaPersonagem());

        AtualizaPopPersonagens();

        popInimigo_txtUI.text = popularidadeInimigo.ToString();
        barraPopInimigo.value = popularidadeInimigo;

        pop_txtUI.text = Mathf.Round(popularidadePlayer).ToString();
        barraPop.value = popularidadePlayer;



       // HabilitaBotoes();

        inimigoAtacou = true;


    } // FIM ATAQUE Fraudar Urnas

    public void AtaqueInimigoFakeNews(int autoridadeAtaque)
    {
        MitouLacrou();
        CalculoConfiancaInimigo();
        danoInimigo = Mathf.Round(Mathf.Round(Mathf.Round(((2 * levelInimigo / 5 + 2) * autoridadeInimigo * autoridadeAtaque / apoioMidiaPlayer) / 50) + 2) * mitouLacrou) * confianca;

        Protegido();



        if (Mathf.Round(popularidadePlayer) <= 0)
        {
            popularidadePlayer = 0;
        }




        somaPopPartido = Mathf.Round(somaPopPartido - danoInimigo);
        popularidadePlayer = Mathf.Round(popularidadePlayer) - danoInimigo;
        dialogo.text = " ";

        if (popularidadePlayer <= 0)
        {
            popularidadePlayer = 0;
        }

        if (confianca == 0)
        {
            dialogo.text = "O oponente errou o ataque, pois não foi confiante";

        }
        if (confianca != 0)
        {
            dialogo.text = "O oponente usou Fake News e tirou " + danoInimigo + " de sua popularidade";

            if (direita == true && chanceMitarLacrar == 10)
            {
                dialogo.text = ("Oponente MITOU com Fake News " + danoInimigo + " da sua popularidade");

            }
            if (esquerda == true && chanceMitarLacrar == 10)
            {
                dialogo.text = ("Oponente LACROU com Fake News " + danoInimigo + " da sua popularidade");

            }
        }








        StartCoroutine(DialogoEscolhaPersonagem());

        AtualizaPopPersonagens();

        popInimigo_txtUI.text = popularidadeInimigo.ToString();
        barraPopInimigo.value = popularidadeInimigo;

        pop_txtUI.text = Mathf.Round(popularidadePlayer).ToString();
        barraPop.value = popularidadePlayer;



        //HabilitaBotoes();

        inimigoAtacou = true;

    } // FIM ATAQUE FAKE NEWS

    public void AtaqueInimigoPerguntaPolemica(int autoridadeAtaque)
    {
        MitouLacrou();
        CalculoConfiancaInimigo();
        danoInimigo = Mathf.Round(Mathf.Round(Mathf.Round(((2 * levelInimigo / 5 + 2) * autoridadeInimigo * autoridadeAtaque / apoioMidiaPlayer) / 50) + 2) * mitouLacrou) * confianca;
        Protegido();



        if (Mathf.Round(popularidadePlayer) <= 0)
        {
            popularidadePlayer = 0;
        }

        if (popularidadePlayer <= 0)
        {
            popularidadePlayer = 0;
        }


        somaPopPartido = Mathf.Round(somaPopPartido - danoInimigo);
        popularidadePlayer = Mathf.Round(popularidadePlayer) - danoInimigo;
        dialogo.text = " ";

        if (confianca == 0)
        {
            dialogo.text = "O oponente errou o ataque, pois não foi confiante";

        }
        if (confianca != 0)
        {
            dialogo.text = "O oponente usou Fake News e tirou " + danoInimigo + " de sua popularidade";

            if (direita == true && chanceMitarLacrar == 10)
            {
                dialogo.text = ("Oponente MITOU com Fake News " + danoInimigo + " da sua popularidade");

            }
            if (esquerda == true && chanceMitarLacrar == 10)
            {
                dialogo.text = ("Oponente LACROU com Fake News " + danoInimigo + " da sua popularidade");

            }
        }






        StartCoroutine(DialogoEscolhaPersonagem());



        AtualizaPopPersonagens();

        popInimigo_txtUI.text = popularidadeInimigo.ToString();
        barraPopInimigo.value = popularidadeInimigo;

        pop_txtUI.text = Mathf.Round(popularidadePlayer).ToString();
        barraPop.value = popularidadePlayer;



       // HabilitaBotoes();

        inimigoAtacou = true;

    } // FIM ATAQUE DISCURSO INFLAMADO


    // ------ //


    // TIRA APOIO DA MIDIA PLAYER
    public void AtaqueInimigoVazarLigacoes(int autoridadeAtaque)
    {


        MitouLacrou();
        Protegido();
        CalculoConfiancaInimigo();
        //autoridadeAtaque = Random.Range(30, 40);


        danoInimigo = Mathf.Round(Mathf.Round(Mathf.Round(((2 * levelInimigo / 5 + 2) * apoioMidiaInimigo * autoridadeAtaque / apoioMidiaPlayer) / 50) + 2) * mitouLacrou) * confianca;

        if (apoioMidiaPlayer > danoInimigo)
        {
            apoioMidiaPlayer = apoioMidiaPlayer - danoInimigo;

            if (confianca == 0)
            {
                dialogo.text = "Oponente errou o ataque porque não foi confiante";

            }
            if (confianca != 0)
            {
                dialogo.text = "Oponente vazou suas ligações comprometedoras e tirou " + danoInimigo + " de seu Apoio da Mídia";

                if (direita == true && chanceMitarLacrar == 10)
                {
                    dialogo.text = ("Muito opressor! Oponente MITOU e tirou " + danoInimigo + " de seu Apoio da Mídia");

                }
                if (esquerda == true && chanceMitarLacrar == 10)
                {
                    dialogo.text = ("Que tiro foi esse?! Oponente LACROU e tirou " + danoInimigo + " de seu Apoio da Mídia");

                }
            }
        }

        if (apoioMidiaPlayer < danoInimigo)
        {
            apoioMidiaPlayer = 10;

            if (confianca == 0)
            {
                dialogo.text = "Oponente errou o ataque porque não foi confiante";

            }
            if (confianca != 0)
            {
                dialogo.text = "Oponente vazou suas ligações comprometedoras e tirou " + danoInimigo + " de seu Apoio da Mídia";
            }


        }

        StartCoroutine(DialogoEscolhaPersonagem());


        popInimigo_txtUI.text = popularidadeInimigo.ToString();
        barraPopInimigo.value = popularidadeInimigo;

        pop_txtUI.text = Mathf.Round(popularidadePlayer).ToString();
        barraPop.value = popularidadePlayer;



       // HabilitaBotoes();

        inimigoAtacou = true;
    }

    // TIRA CONFIANÇA
    public void AtaqueInimigoAdHominem(int autoridadeAtaque)
    {

        MitouLacrou();
        Protegido();
        CalculoConfiancaInimigo();

        danoInimigo = Mathf.Round(Mathf.Round(Mathf.Round(((2 * levelInimigo / 5 + 2) * confiancaInimigo * autoridadeAtaque / confiancaPlayer) / 100) + 2) * mitouLacrou) * confianca;

        if (confiancaPlayer > danoInimigo && confiancaPlayer > 10)
        {
            confiancaPlayer = (int)(confiancaPlayer - danoInimigo);
            if (confianca == 0)
            {
                dialogo.text = "Oponente errou o ataque porque não foi confiante";

            }
            if (confianca != 0)
            {
                dialogo.text = "Oponente utilizou argumentos Ad Hominem e tirou " + danoInimigo + " de sua Confiança";

                if (direita == true && chanceMitarLacrar == 10)
                {
                    dialogo.text = ("Muito opressor! Oponente MITOU e tirou " + danoInimigo + " de sua Confiança");

                }
                if (esquerda == true && chanceMitarLacrar == 10)
                {
                    dialogo.text = ("Que tiro foi esse?! Oponente LACROU e tirou " + danoInimigo + " de sua Confiança");

                }

            }

           // DesabilitaBotoes();

            inimigoAtacou = true;

        }

        if (confiancaPlayer < danoInimigo && confiancaPlayer > 10)
        {
            confiancaPlayer = 1;
            if (confianca == 0)
            {
                dialogo.text = "Oponente errou o ataque porque não foi confiante";

            }
            if (confianca != 0)
            {
                dialogo.text = "Oponente utilizou argumentos Ad Hominem e tirou " + danoInimigo + " de sua Confiança";

            }

           // DesabilitaBotoes();

            inimigoAtacou = true;
        }

        if (confiancaPlayer < 10)
        {
            inimigoAtacou = false;
        }

        StartCoroutine(DialogoEscolhaPersonagem());

    }

    // TIRA AUTORIDADE PLAYER

    public void AtaqueInimigoDenunciaSupremo(int autoridadeAtaque)
    {
        Protegido(); // verifica se o player está protegido

        MitouLacrou();
        CalculoConfiancaInimigo();



        danoInimigo = Mathf.Round(Mathf.Round(Mathf.Round(((2 * levelInimigo / 5 + 2) * autoridadeInimigo * autoridadeAtaque / autoridadePlayer) / 50) + 2) * mitouLacrou) * confianca;
        autoridadePlayer = autoridadePlayer - danoInimigo;

        if (autoridadePlayer <= 0)
        {
            autoridadePlayer = 5;
        }

        if (confianca == 0)
        {
            dialogo.text = "Oponente errou o ataque porque não foi confiante";

        }
        if (confianca != 0)
        {
            dialogo.text = "Oponente usou Denúncia ao Supremo. Você perdeu " + danoInimigo + " de Autoridade";

            if (direita == true && chanceMitarLacrar == 10)
            {
                dialogo.text = ("Muito opressor! Oponente MITOU e tirou " + danoInimigo + " da sua Autoridade");

            }
            if (esquerda == true && chanceMitarLacrar == 10)
            {
                dialogo.text = ("Que tiro foi esse?! Oponente LACROU e tirou " + danoInimigo + " da sua Autoridade");

            }




        }

        StartCoroutine(DialogoEscolhaPersonagem());


        popInimigo_txtUI.text = popularidadeInimigo.ToString();
        barraPopInimigo.value = popularidadeInimigo;

        pop_txtUI.text = Mathf.Round(popularidadePlayer).ToString();
        barraPop.value = popularidadePlayer;



       // HabilitaBotoes();

        inimigoAtacou = true;

    } // FIM ATAQUE INIMIGO DENUNCIA SUPREMO

    // AUMENTA AUTORIDADE INIMIGO

    public void AtaqueInimigoMilitancia(int autoridadeAtaque)
    {
        MitouLacrou();
        CalculoConfiancaInimigo();


        danoInimigo = Mathf.Round(Mathf.Round(Mathf.Round(((2 * levelInimigo / 5 + 2) * autoridadeInimigo * autoridadeAtaque / autoridadeInimigo) / 50) + 2) * mitouLacrou) * confianca;
        autoridadeInimigo = autoridadeInimigo + danoInimigo;

        if (confianca == 0)
        {
            dialogo.text = "Oponente errou o ataque porque não foi confiante";

        }
        if (confianca != 0)
        {
            dialogo.text = "Oponente usou Miliância. Autoridade aumentou para " + autoridadeInimigo;

            if (direita == true && chanceMitarLacrar == 10)
            {
                dialogo.text = ("Muito opressor! Oponente MITOU e aumentou Autoridade para " + autoridadeInimigo);

            }
            if (esquerda == true && chanceMitarLacrar == 10)
            {
                dialogo.text = ("Que tiro foi esse?! Oponente LACROU e aumentou Autoridade para " + autoridadeInimigo);

            }




        }

        StartCoroutine(DialogoEscolhaPersonagem());


        popInimigo_txtUI.text = popularidadeInimigo.ToString();
        barraPopInimigo.value = popularidadeInimigo;

        pop_txtUI.text = Mathf.Round(popularidadePlayer).ToString();
        barraPop.value = popularidadePlayer;



        //HabilitaBotoes();

        inimigoAtacou = true;

    }

    // AUMENTA APOIO DA MIDIA DO INIMIGO 
    public void AtaqueInimigoHabeasCorpus(int autoridadeAtaque)
    {
        CalculoConfiancaInimigo();
        MitouLacrou();


        danoInimigo = Mathf.Round(Mathf.Round(Mathf.Round(((2 * levelInimigo / 5 + 2) * apoioMidiaInimigo * autoridadeAtaque / apoioMidiaInimigo) / 50) + 2) * mitouLacrou) * confianca;
        apoioMidiaInimigo = apoioMidiaInimigo + danoInimigo;

        if (confianca == 0)
        {
            dialogo.text = "Oponente errou o ataque porque não foi confiante";

        }
        if (confianca != 0)
        {
            dialogo.text = "Oponente usou Habeas corpus. Agora, o Apoio da Mídia aumentou para " + apoioMidiaInimigo;

            if (direita == true && chanceMitarLacrar == 10)
            {
                dialogo.text = ("Muito opressor! Oponente MITOU e aumentou o Apoio da Mídia para " + apoioMidiaInimigo);

            }
            if (esquerda == true && chanceMitarLacrar == 10)
            {
                dialogo.text = ("Que tiro foi esse?! Oponente LACROU e aumentou o Apoio da Mídia para " + apoioMidiaInimigo);

            }




        }

        StartCoroutine(DialogoEscolhaPersonagem());


        popInimigo_txtUI.text = popularidadeInimigo.ToString();
        barraPopInimigo.value = popularidadeInimigo;

        pop_txtUI.text = Mathf.Round(popularidadePlayer).ToString();
        barraPop.value = popularidadePlayer;



        //HabilitaBotoes();

        inimigoAtacou = true;
    } // FIM HABEAS CORPUS INIMIGO

    //  AUMENTA POPULARIDADE
    public void AtaqueInimigoElogioJornal(int autoridadeAtaque)
    {

        CalculoConfiancaInimigo();

        // autoridadeAtaque = Random.Range(40, 50);


        danoInimigo = (autoridadeAtaque / 2) * confianca;
        popularidadeInimigo = popularidadeInimigo + danoInimigo;



        if (confianca == 0)
        {
            dialogo.text = "Oponente errou o ataque porque não foi confiante";

        }
        if (confianca != 0)
        {
            dialogo.text = "Oponente foi elogiado em uma matéria do Jornal. Popularidade aumentou para " + popularidadeInimigo;

        }


        popInimigo_txtUI.text = popularidadeInimigo.ToString();
        barraPopInimigo.value = popularidadeInimigo;

        pop_txtUI.text = Mathf.Round(popularidadePlayer).ToString();
        barraPop.value = popularidadePlayer;

        StartCoroutine(DialogoEscolhaPersonagem());

        //HabilitaBotoes();

        inimigoAtacou = true;
    }

    // AUMENTA CONFIANÇA

    public void AtaqueInimigoApoioCentrao(int autoridadeAtaque)
    {

        MitouLacrou();
        Protegido();
        CalculoConfiancaInimigo();

        danoInimigo = Mathf.Round(Mathf.Round(Mathf.Round(((2 * levelInimigo / 5 + 2) * confiancaInimigo * autoridadeAtaque / confiancaInimigo) / 50) + 2) * mitouLacrou) * confianca;


        confiancaInimigo = (int)(confiancaInimigo + danoInimigo);
        if (confianca == 0)
        {
            dialogo.text = "Oponente errou o ataque porque não foi confiante";

        }
        if (confianca != 0)
        {
            dialogo.text = "Oponente conquistou apoio do Centrão e aumentou " + danoInimigo + " de Confiança.";

            if (direita == true && chanceMitarLacrar == 10)
            {
                dialogo.text = ("Muito opressor! Oponente MITOU e aumentou " + danoInimigo + " de Retórica.");

            }
            if (esquerda == true && chanceMitarLacrar == 10)
            {
                dialogo.text = ("Que tiro foi esse?! Oponente LACROU e aumentou " + danoInimigo + " Retórica.");

            }
        }




        StartCoroutine(DialogoEscolhaPersonagem());


        //DesabilitaBotoes();

        inimigoAtacou = true;
    }

    // -------- //

    public void AtaquesInimigo()
    {
        MinMaxAut();

        /*int i = Random.Range(1, 3);
        switch (i)
        {
            case (1):

                AtaqueInimigoFraudarUrnas(Random.Range(minAut, maxAut));
                break;

            case (2):
                AtaqueInimigoFakeNews(Random.Range(minAut, maxAut));
                break;

            case (3):
                AtaqueInimigoPerguntaPolemica(Random.Range(minAut, maxAut));
                break;

        }*?


        /*/
        // PLAYER ATACOU

        if (ataquePlayer == true && defesaPlayer == false && mudaStatusPlayer == false && inimigoAtacou == false)// && inimigoJaAtacou == false)
        {
            print("PLAYER ATACOU");
            if (popularidadePlayer >= 80 && inimigoAtacou == false)
            {
                int i = Random.Range(1, 3);
                switch (i)
                {
                    case (1):

                        AtaqueInimigoFraudarUrnas(Random.Range(minAut, maxAut));
                        break;

                    case (2):
                        AtaqueInimigoFakeNews(Random.Range(minAut, maxAut));
                        break;

                    case (3):
                        AtaqueInimigoPerguntaPolemica(Random.Range(minAut, maxAut));
                        break;

                }

            }

            if (popularidadePlayer >= 50 && popularidadePlayer < 80 && inimigoAtacou == false)
            {
                int i = Random.Range(1, 3);
                switch (i)
                {
                    case (1):

                        AtaqueInimigoHabeasCorpus(Random.Range(minAut, maxAut));
                        break;

                    case (2):
                        AtaqueInimigoAdHominem(Random.Range(minAut, maxAut));
                        break;

                    case (3):
                        AtaqueInimigoPerguntaPolemica(Random.Range(minAut, maxAut));
                        break;

                }

            }

            if (popularidadePlayer >= 20 && popularidadePlayer < 50 && inimigoAtacou == false)
            {
                int i = Random.Range(1, 3);
                switch (i)
                {
                    case (1):

                        AtaqueInimigoHabeasCorpus(Random.Range(minAut, maxAut));
                        break;

                    case (2):
                        if (autoridadePlayer > 10)
                        {
                            AtaqueInimigoDenunciaSupremo(Random.Range(minAut, maxAut));
                        }
                        if (autoridadePlayer < 10)
                        {
                            AtaqueInimigoHabeasCorpus(Random.Range(minAut, maxAut));
                        }
                        break;

                    case (3):
                        AtaqueInimigoFakeNews(Random.Range(minAut, maxAut));
                        break;

                }

            }

            if (popularidadePlayer < 20 && inimigoAtacou == false)
            {
                int i = Random.Range(1, 4);
                switch (i)
                {
                    case (1):

                        AtaqueInimigoHabeasCorpus(Random.Range(minAut, maxAut));
                        break;

                    case (2):
                        AtaqueInimigoAdHominem(Random.Range(minAut, maxAut));
                        break;

                    case (3):
                        AtaqueInimigoFraudarUrnas(Random.Range(minAut, maxAut));
                        break;

                    case (4):
                        AtaqueInimigoApoioCentrao(Random.Range(minAut, maxAut));
                        break;
                }
            }

            if (popularidadeInimigo <= 30 && qteAtaqueInimigoElogio == 1 && inimigoAtacou == false)
            {
                AtaqueInimigoElogioJornal(Random.Range(minAut, maxAut));
                qteAtaqueInimigoElogio = 0;

            }


        }

        // PLAYER DEFENDEU

        if (ataquePlayer == false && defesaPlayer == true && mudaStatusPlayer == false && inimigoAtacou == false)
        {
            if (popularidadePlayer >= 80 && inimigoAtacou == false)
            {
                int i = Random.Range(1, 3);
                switch (i)
                {
                    case (1):

                        AtaqueInimigoFraudarUrnas(Random.Range(minAut, maxAut));
                        break;

                    case (2):
                        AtaqueInimigoFakeNews(Random.Range(minAut, maxAut));
                        break;

                    case (3):
                        AtaqueInimigoPerguntaPolemica(Random.Range(minAut, maxAut));
                        break;

                }

            }

            if (popularidadePlayer >= 50 && popularidadePlayer < 80 && inimigoAtacou == false)
            {
                int i = Random.Range(1, 3);
                switch (i)
                {
                    case (1):
                        if (apoioMidiaPlayer > 10)
                        {
                            AtaqueInimigoVazarLigacoes(Random.Range(minAut, maxAut));
                        }
                        if (apoioMidiaPlayer <= 10)
                        {
                            AtaqueInimigoMilitancia(Random.Range(minAut, maxAut));

                        }

                        break;

                    case (2):
                        AtaqueInimigoFakeNews(Random.Range(minAut, maxAut));
                        break;

                    case (3):
                        AtaqueInimigoPerguntaPolemica(Random.Range(minAut, maxAut));
                        break;

                }

            }

            if (popularidadePlayer >= 20 && popularidadePlayer < 50 && inimigoAtacou == false)
            {
                int i = Random.Range(1, 3);
                switch (i)
                {
                    case (1):

                        AtaqueInimigoAdHominem(Random.Range(minAut, maxAut));
                        break;

                    case (2):
                        if (autoridadePlayer > 10)
                        {
                            AtaqueInimigoDenunciaSupremo(Random.Range(minAut, maxAut));
                        }
                        if (autoridadePlayer < 10)
                        {
                            AtaqueInimigoHabeasCorpus(Random.Range(minAut, maxAut));
                        }
                        break;

                    case (3):
                        AtaqueInimigoFakeNews(Random.Range(minAut, maxAut));
                        break;

                }

            }

            if (popularidadePlayer < 20 && inimigoAtacou == false)
            {
                int i = Random.Range(1, 4);
                switch (i)
                {
                    case (1):

                        AtaqueInimigoHabeasCorpus(Random.Range(minAut, maxAut));
                        break;

                    case (2):
                        AtaqueInimigoAdHominem(Random.Range(minAut, maxAut));
                        break;

                    case (3):
                        AtaqueInimigoFraudarUrnas(Random.Range(minAut, maxAut));
                        break;

                    case (4):
                        AtaqueInimigoApoioCentrao(Random.Range(minAut, maxAut));
                        break;
                }
            }

            if (popularidadeInimigo <= 30 && qteAtaqueInimigoElogio == 1 && inimigoAtacou == false)
            {
                AtaqueInimigoElogioJornal(Random.Range(minAut, maxAut));
                qteAtaqueInimigoElogio = 0;

            }

        }

        // PLAYER MUDOU STATUS

        if (ataquePlayer == false && defesaPlayer == false && mudaStatusPlayer == true && inimigoAtacou == false)
        {
            print("PLAYER MUDOU STATUS");

            if (popularidadePlayer >= 80)
            {
                print("ATAQUE MUDA STATUS1");

                int i = Random.Range(1, 3);
                switch (i)
                {
                    case (1):

                        AtaqueInimigoFraudarUrnas(Random.Range(minAut, maxAut));
                        inimigoAtacou = true;

                        break;

                    case (2):
                        AtaqueInimigoMilitancia(Random.Range(minAut, maxAut));
                        inimigoAtacou = true;

                        break;

                    case (3):
                        AtaqueInimigoPerguntaPolemica(Random.Range(minAut, maxAut));
                        inimigoAtacou = true;

                        break;

                }

            }

            if (popularidadePlayer >= 50 && popularidadePlayer < 80 && inimigoAtacou == false)
            {
                print("ATAQUE MUDA STATUS2");

                int i = Random.Range(1, 3);
                switch (i)
                {
                    case (1):

                        if (apoioMidiaPlayer > 10)
                        {
                            AtaqueInimigoVazarLigacoes(Random.Range(minAut, maxAut));
                        }
                        if (apoioMidiaPlayer <= 10)
                        {
                            AtaqueInimigoMilitancia(Random.Range(minAut, maxAut));
                        }
                        break;

                    case (2):
                        AtaqueInimigoApoioCentrao(Random.Range(minAut, maxAut));
                        break;

                    case (3):
                        AtaqueInimigoHabeasCorpus(Random.Range(minAut, maxAut));
                        break;

                }

            }

            if (popularidadePlayer >= 20 && popularidadePlayer < 50 && inimigoAtacou == false)
            {
                print("ATAQUE MUDA STATUS3");

                int i = Random.Range(1, 3);
                switch (i)
                {
                    case (1):

                        AtaqueInimigoAdHominem(Random.Range(minAut, maxAut));
                        break;

                    case (2):
                        if (autoridadePlayer > 10)
                        {
                            AtaqueInimigoDenunciaSupremo(Random.Range(minAut, maxAut));
                        }
                        if (autoridadePlayer < 10)
                        {
                            AtaqueInimigoHabeasCorpus(Random.Range(minAut, maxAut));
                        }
                        break;

                    case (3):
                        AtaqueInimigoFakeNews(Random.Range(minAut, maxAut));
                        break;

                }

            }

            if (popularidadePlayer < 20 && inimigoAtacou == false)
            {
                print("ATAQUE MUDA STATUS4");

                int i = Random.Range(1, 4);
                switch (i)
                {
                    case (1):

                        AtaqueInimigoHabeasCorpus(Random.Range(minAut, maxAut));
                        break;

                    case (2):
                        AtaqueInimigoAdHominem(Random.Range(minAut, maxAut));
                        break;

                    case (3):
                        AtaqueInimigoFraudarUrnas(Random.Range(minAut, maxAut));
                        break;

                    case (4):
                        AtaqueInimigoApoioCentrao(Random.Range(minAut, maxAut));
                        break;
                }
            }

            if (popularidadeInimigo <= 30 && qteAtaqueInimigoElogio == 1 && inimigoAtacou == false)
            {
                AtaqueInimigoElogioJornal(Random.Range(minAut, maxAut));
                qteAtaqueInimigoElogio = 0;

            }

        }

        // TROCOU DE PERSONAGEM

        if (trocouPersonagem == true && inimigoAtacou == false)
        {

            if (popularidadePlayer >= 80 && inimigoAtacou == false)
            {
                int i = Random.Range(1, 3);
                switch (i)
                {
                    case (1):

                        AtaqueInimigoFraudarUrnas(Random.Range(minAut, maxAut));
                        break;

                    case (2):
                        AtaqueInimigoMilitancia(Random.Range(minAut, maxAut));
                        break;

                    case (3):
                        AtaqueInimigoPerguntaPolemica(Random.Range(minAut, maxAut));
                        break;

                }

            }

            if (popularidadePlayer >= 50 && popularidadePlayer < 80 && inimigoAtacou == false)
            {
                int i = Random.Range(1, 3);
                switch (i)
                {
                    case (1):

                        if (apoioMidiaPlayer > 10)
                        {
                            AtaqueInimigoVazarLigacoes(Random.Range(minAut, maxAut));
                        }
                        if (apoioMidiaPlayer <= 10)
                        {
                            AtaqueInimigoMilitancia(Random.Range(minAut, maxAut));
                        }
                        break;

                    case (2):
                        AtaqueInimigoApoioCentrao(Random.Range(minAut, maxAut));
                        break;

                    case (3):
                        AtaqueInimigoHabeasCorpus(Random.Range(minAut, maxAut));
                        break;

                }

            }

            if (popularidadePlayer >= 20 && popularidadePlayer < 50 && inimigoAtacou == false)
            {
                int i = Random.Range(1, 3);
                switch (i)
                {
                    case (1):

                        AtaqueInimigoAdHominem(Random.Range(minAut, maxAut));
                        break;

                    case (2):
                        AtaqueInimigoDenunciaSupremo(Random.Range(minAut, maxAut));
                        break;

                    case (3):
                        AtaqueInimigoFakeNews(Random.Range(minAut, maxAut));
                        break;

                }

            }

            if (popularidadePlayer < 20 && inimigoAtacou == false)
            {
                int i = Random.Range(1, 4);
                switch (i)
                {
                    case (1):

                        AtaqueInimigoHabeasCorpus(Random.Range(minAut, maxAut));
                        break;

                    case (2):
                        AtaqueInimigoAdHominem(Random.Range(minAut, maxAut));
                        break;

                    case (3):
                        AtaqueInimigoFraudarUrnas(Random.Range(minAut, maxAut));
                        break;

                    case (4):
                        AtaqueInimigoApoioCentrao(Random.Range(minAut, maxAut));
                        break;
                }
            }

            if (popularidadeInimigo <= 30 && qteAtaqueInimigoElogio == 1 && inimigoAtacou == false)
            {
                AtaqueInimigoElogioJornal(Random.Range(minAut, maxAut));
                qteAtaqueInimigoElogio = 0;

            }
        }

        // RETORICA INIMIGO É MAIOR

        if (ataquePlayer == false && defesaPlayer == false && mudaStatusPlayer == false && inimigoAtacou == false)
        {
            int i = Random.Range(1, 3);
            switch (i)
            {
                case (1):

                    AtaqueInimigoFraudarUrnas(Random.Range(minAut, maxAut));
                    inimigoAtacou = true;

                    break;

                case (2):
                    AtaqueInimigoMilitancia(Random.Range(minAut, maxAut));
                    inimigoAtacou = true;

                    break;

                case (3):
                    AtaqueInimigoPerguntaPolemica(Random.Range(minAut, maxAut));
                    inimigoAtacou = true;

                    break;

            }
        }

    } // FIM ATAQUES INIMIGO


    public void MinMaxAut()
    {
        if (levelPlayer <= 3)
        {
            minAut = 15;
            maxAut = 25;
        }

        if (levelPlayer > 3 && levelPlayer <= 6)
        {
            minAut = 20;
            maxAut = 30;
        }

        if (levelPlayer > 6 && levelPlayer <= 10)
        {
            minAut = 25;
            maxAut = 35;
        }

        if (levelPlayer > 10 && levelPlayer <= 16)
        {
            minAut = 30;
            maxAut = 40;
        }

        if (levelPlayer > 16 && levelPlayer <= 30)
        {
            minAut = 35;
            maxAut = 45;
        }

        if (levelPlayer > 30)
        {
            minAut = 45;
            maxAut = 55;
        }

    }
    // --------------------- //

    public void MitouLacrou()
    {
        chanceMitarLacrar = Random.Range(0, 10);

        if (chanceMitarLacrar == 10)
        {
            mitouLacrou = 2f;
            print("MITOU LACROU");
        }

        if (chanceMitarLacrar != 10)
        {
            mitouLacrou = 1;
        }



    }

    public void CalculoConfiancaPlayer()
    {
        calculoConfianca = Random.Range(0, confiancaPlayer);

        if (calculoConfianca == 0)
        {
            confianca = 0;
            print("Seu político errou o ataque porque não foi confiante");

        }

        if (calculoConfianca != 0)
        {
            confianca = 1;
            print("O ataque foi confiante");
        }
    }

    public void CalculoConfiancaInimigo()
    {
        calculoConfianca = Random.Range(0, confiancaInimigo);

        if (calculoConfianca == 0)
        {
            confianca = 0;
            print("oponente errou ataque");
            dialogo.text = "Oponente errou o ataque porque não foi confiante";

        }

        if (calculoConfianca != 0)
        {
            confianca = 1;
            print("oponente acertou ataque");
        }
    }

    public void DireitaEsquerda()
    {
        if (direita == true)
        {
            esquerda = false;
        }
        if (esquerda == true)
        {
            direita = false;
        }

        if (PlayerPrefs.GetInt("LulaDentroScene") == 1)
        {
            esquerda = true;
        }

        if (PlayerPrefs.GetInt("CiroDentroScene") == 1)
        {
            esquerda = true;
        }
        if (PlayerPrefs.GetInt("BolsoDentroScene") == 1)
        {
            direita = true;

        }
        if (PlayerPrefs.GetInt("DilmaDentroScene") == 1)
        {
            esquerda = true;
        }
        if (PlayerPrefs.GetInt("SuplicyDentroScene") == 1)
        {
            esquerda = true;
        }
        if (PlayerPrefs.GetInt("EneasDentroScene") == 1)
        {
            direita = true;
        }

        if (PlayerPrefs.GetInt("DodorioDentroScene") == 1)
        {
            direita = true;
        }


    }

    public void DireitaEsquerdaInimigos()
    {
        if (direita == true)
        {
            esquerda = false;
        }
        if (esquerda == true)
        {
            direita = false;
        }

        if (PlayerPrefs.GetInt("LulaInimigoDentroScene") == 1)
        {
            esquerda = true;
        }

        if (PlayerPrefs.GetInt("CiroInimigoDentroScene") == 1)
        {
            esquerda = true;
        }
        if (PlayerPrefs.GetInt("BolsoInimigoDentroScene") == 1)
        {
            direita = true;

        }
        if (PlayerPrefs.GetInt("DilmaInimigoDentroScene") == 1)
        {
            esquerda = true;
        }
        if (PlayerPrefs.GetInt("SuplicyInimigoDentroScene") == 1)
        {
            esquerda = true;
        }
        if (PlayerPrefs.GetInt("EneasInimigoDentroScene") == 1)
        {
            direita = true;
        }

        if (PlayerPrefs.GetInt("DodorioInimigoDentroScene") == 1)
        {
            direita = true;
        }


    }

    public void CalculoRetorica()
    {
        if (retoricaPlayer >= retoricaInimigo && playerAtacou == false)
        {
            currentState = BattleStates.ESCOLHAJOGADOR;
            HabilitaBotoes();
            print("retorica do player foi maior");
            //MovimentosPlayer.gameObject.SetActive(true);

        }

        if (retoricaPlayer < retoricaInimigo && inimigoAtacou == false)
        {
            StartCoroutine(VezInimigo());
            DesabilitaBotoes();

            print("retorica do inimigo foi maior");
            MovimentosPlayer.gameObject.SetActive(false);


        }
    }



    public void Protegido()
    {
        if (playerProtegido == true && currentState == BattleStates.ESCOLHAINIMIGO)
        {
            danoInimigo = 0;
            playerProtegido = false;
        }

        if (inimigoProtegido == true && currentState == BattleStates.ESCOLHAJOGADOR)
        {
            danoPlayer = 0;
            inimigoProtegido = false;
        }
    }

    public void DialogoEscolha()
    {
        dialogo.text = "O que você irá fazer?";
    }

    IEnumerator DialogoEscolhaPersonagem()
    {
        HabilitaBotoes();
        yield return new WaitForSeconds(4f);
        dialogo.text = " ";
        yield return new WaitForSeconds(0.2f);
        dialogo.text = "O que você irá fazer?";

    }



} // FIM DA CLASSE

