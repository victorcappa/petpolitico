using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;


public class GameManagerMinistroDiz : MonoBehaviour
{

    public GameObject gameButtonPrefab;
    public List<BtnSett> buttonSettings;
    public Transform painelMiniGameInflu;
    List<GameObject> gameButtons;
    int bleepCount;
    List<int> bleeps;
    List<int> playerBleeps;
    System.Random rg = new System.Random(); // random generator
    bool inputEnabled = false; // desabilitar o input quando for a hora de ouvir
    bool gameOver = false;
    System.Random randomNumberGenerator = new System.Random();

    public int placarVerba;
    public Text placarVerba_txtUI;

    public Text chances_txtUI;

    public int chances;

    public GameObject telaGameOver;



    public void Start()
    {
        randomNumberGenerator = new System.Random(DateTime.Now.Millisecond);

        gameButtons = new List<GameObject>();

        CreateGameButton(0, new Vector3(-230, 350));
        CreateGameButton(1, new Vector3(230, 350));
        CreateGameButton(2, new Vector3(230, -350));
        CreateGameButton(3, new Vector3(-230, -350));
        CreateGameButton(4, new Vector3(0, 0));

        chances = 3;
        chances_txtUI.text = chances.ToString();
        PlayerPrefs.SetInt("Chances",chances);

        bleepCount = 3;


        StartCoroutine(SimonSays());

        NoPlacar();

        telaGameOver.gameObject.SetActive(false);



    }

    public void Update()
    {
        NoPlacar();
        PlayerPrefs.GetInt("Chances");
    }

    public void NoPlacar()
    {
        placarVerba_txtUI.text = placarVerba.ToString();


        placarVerba = PlayerPrefs.GetInt("Verba");

        if (placarVerba <= 0)
        {
            placarVerba = 0;
        }
            
    }

    void CreateGameButton(int index, Vector3 position)
    {
        GameObject gameButton = Instantiate(gameButtonPrefab, Vector3.zero, Quaternion.identity) as GameObject;

        gameButton.transform.SetParent(painelMiniGameInflu);
        gameButton.transform.localPosition = position;

        gameButton.GetComponent<Image>().color = buttonSettings[index].normalColor;
        gameButton.GetComponent<Button>().onClick.AddListener(() => {
            OnGameButtonClick(index);
        } );

        gameButtons.Add(gameButton);
    }

    void PlayAudio(int index)
    {
        float length = 0.5f;
        float frequency = 0.001f * ((float)index + 1f);

        AnimationCurve volumeCurve = new AnimationCurve(new Keyframe(0f, 1f, 0f, -1f), new Keyframe(length, 0f, -1f, 0f));
        AnimationCurve frequencyCurve = new AnimationCurve(new Keyframe(0f, frequency, 0f, 0f), new Keyframe(length, frequency, 0f, 0f));

        LeanAudioOptions audioOptions = LeanAudio.options();
        audioOptions.setWaveSine();
        audioOptions.setFrequency(44100);

        AudioClip audioClip = LeanAudio.createAudio(volumeCurve, frequencyCurve, audioOptions);

        LeanAudio.play(audioClip, 0.5f);
    }

    void OnGameButtonClick(int index)
    {
        if (!inputEnabled)
        {
            return;
        }

        Bleep(index);

        playerBleeps.Add(index);

        if (bleeps[playerBleeps.Count - 1] != index)
        {
            chances = chances - 1;

            chances_txtUI.text = chances.ToString();
            PlayerPrefs.SetInt("Chances", chances);

            PlayerPrefs.SetInt("Verba", PlayerPrefs.GetInt("Verba") - 5);

            if (chances <= 0 || placarVerba <= 0)
            {
                GameOver();

            }
            if (chances >0)
            {
                StartCoroutine(SimonSays());

            }


            return;
        }

        if (bleeps.Count == playerBleeps.Count)
        {
            PlayerPrefs.SetInt("Verba", PlayerPrefs.GetInt("Verba") + 10);

            } 
            
            StartCoroutine(SimonSays());

                     

            print("parabens");
        }


    public void GameOver()
    {
        gameOver = true;
        inputEnabled = false;
        //PlayerPrefs.SetInt("InfluLula", PlayerPrefs.GetInt("InfluLula") + 30);
        print("gameover");
        //bleepCount = 3;

        if (placarVerba >= 0)
        {
            telaGameOver.gameObject.SetActive(true);

        }

        if (placarVerba <0)
        {
            // comprar mais influ
        }


    }

        IEnumerator SimonSays()
{
    inputEnabled = false;
    var randomNumber = randomNumberGenerator;
    rg = new System.Random(randomNumber.GetHashCode());

    SetBleeps();

    yield return new WaitForSeconds(1f);

    for (int i = 0; i < bleeps.Count; i++)
    {
        Bleep(bleeps[i]);

        yield return new WaitForSeconds(0.6f);
    }

    inputEnabled = true;

    yield return null;
}

    void Bleep(int index)
    {
        LeanTween.value(gameButtons[index], buttonSettings[index].normalColor, buttonSettings[index].highlightColor, 0.25f).setOnUpdate((Color color) => {
            gameButtons[index].GetComponent<Image>().color = color;
        } );

        LeanTween.value(gameButtons[index], buttonSettings[index].highlightColor, buttonSettings[index].normalColor, 0.25f)
            .setDelay(0.5f)
            .setOnUpdate((Color color) => {
                gameButtons[index].GetComponent<Image>().color = color;
            } );

        PlayAudio(index);
    }

    void SetBleeps()
    {
        bleeps = new List<int>();
        playerBleeps = new List<int>();

        for (int i = 0; i < bleepCount; i++)
        {
            bleeps.Add(rg.Next(0, gameButtons.Count));
        }

        bleepCount++;
    }
}

